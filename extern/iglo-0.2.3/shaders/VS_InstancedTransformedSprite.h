#ifdef IGLO_VULKAN

#if 0
; SPIR-V
; Version: 1.0
; Generator: Google spiregg; 0
; Bound: 111
; Schema: 0
               OpCapability Shader
               OpCapability RuntimeDescriptorArray
               OpExtension "SPV_EXT_descriptor_indexing"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Vertex %VSMain "VSMain" %in_var_POSITION %in_var_WIDTH %in_var_HEIGHT %in_var_TEXCOORD0 %in_var_ROTORIGIN %in_var_ROTATION %in_var_COLOR %gl_VertexIndex %gl_Position %out_var_COLOR %out_var_TEXCOORD0
               OpSource HLSL 660
               OpName %type_ConstantBuffer_PushConstants "type.ConstantBuffer.PushConstants"
               OpMemberName %type_ConstantBuffer_PushConstants 0 "textureIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 1 "stencilComponentTextureIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 2 "samplerIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 3 "worldMatrixIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 4 "viewProjMatrixIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 5 "textureConstantsIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 6 "renderConstantsIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 7 "rawOrStructuredBufferIndex"
               OpName %pushConstants "pushConstants"
               OpName %in_var_POSITION "in.var.POSITION"
               OpName %in_var_WIDTH "in.var.WIDTH"
               OpName %in_var_HEIGHT "in.var.HEIGHT"
               OpName %in_var_TEXCOORD0 "in.var.TEXCOORD0"
               OpName %in_var_ROTORIGIN "in.var.ROTORIGIN"
               OpName %in_var_ROTATION "in.var.ROTATION"
               OpName %in_var_COLOR "in.var.COLOR"
               OpName %out_var_COLOR "out.var.COLOR"
               OpName %out_var_TEXCOORD0 "out.var.TEXCOORD0"
               OpName %type_ConstantBuffer_MatrixConstant "type.ConstantBuffer.MatrixConstant"
               OpMemberName %type_ConstantBuffer_MatrixConstant 0 "m"
               OpName %ResourceDescriptorHeap "ResourceDescriptorHeap"
               OpName %ResourceDescriptorHeap_0 "ResourceDescriptorHeap"
               OpName %type_ConstantBuffer_TextureConstants "type.ConstantBuffer.TextureConstants"
               OpMemberName %type_ConstantBuffer_TextureConstants 0 "textureSize"
               OpMemberName %type_ConstantBuffer_TextureConstants 1 "inverseTextureSize"
               OpMemberName %type_ConstantBuffer_TextureConstants 2 "msaa"
               OpName %ResourceDescriptorHeap_1 "ResourceDescriptorHeap"
               OpName %VSMain "VSMain"
               OpDecorate %gl_VertexIndex BuiltIn VertexIndex
               OpDecorate %gl_Position BuiltIn Position
               OpDecorate %in_var_POSITION Location 0
               OpDecorate %in_var_WIDTH Location 1
               OpDecorate %in_var_HEIGHT Location 2
               OpDecorate %in_var_TEXCOORD0 Location 3
               OpDecorate %in_var_ROTORIGIN Location 4
               OpDecorate %in_var_ROTATION Location 5
               OpDecorate %in_var_COLOR Location 6
               OpDecorate %out_var_COLOR Location 0
               OpDecorate %out_var_TEXCOORD0 Location 1
               OpDecorate %pushConstants DescriptorSet 0
               OpDecorate %pushConstants Binding 0
               OpDecorate %ResourceDescriptorHeap DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap Binding 1
               OpDecorate %ResourceDescriptorHeap_0 DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap_0 Binding 1
               OpDecorate %ResourceDescriptorHeap_1 DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap_1 Binding 1
               OpMemberDecorate %type_ConstantBuffer_PushConstants 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_PushConstants 1 Offset 4
               OpMemberDecorate %type_ConstantBuffer_PushConstants 2 Offset 8
               OpMemberDecorate %type_ConstantBuffer_PushConstants 3 Offset 12
               OpMemberDecorate %type_ConstantBuffer_PushConstants 4 Offset 16
               OpMemberDecorate %type_ConstantBuffer_PushConstants 5 Offset 20
               OpMemberDecorate %type_ConstantBuffer_PushConstants 6 Offset 24
               OpMemberDecorate %type_ConstantBuffer_PushConstants 7 Offset 28
               OpDecorate %type_ConstantBuffer_PushConstants Block
               OpMemberDecorate %type_ConstantBuffer_MatrixConstant 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_MatrixConstant 0 MatrixStride 16
               OpMemberDecorate %type_ConstantBuffer_MatrixConstant 0 RowMajor
               OpDecorate %type_ConstantBuffer_MatrixConstant Block
               OpMemberDecorate %type_ConstantBuffer_TextureConstants 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_TextureConstants 1 Offset 8
               OpMemberDecorate %type_ConstantBuffer_TextureConstants 2 Offset 16
               OpDecorate %type_ConstantBuffer_TextureConstants Block
        %int = OpTypeInt 32 1
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
      %int_5 = OpConstant %int 5
      %float = OpTypeFloat 32
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
       %uint = OpTypeInt 32 0
%type_ConstantBuffer_PushConstants = OpTypeStruct %uint %uint %uint %uint %uint %uint %uint %uint
%_ptr_Uniform_type_ConstantBuffer_PushConstants = OpTypePointer Uniform %type_ConstantBuffer_PushConstants
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%_ptr_Input_float = OpTypePointer Input %float
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_v2float = OpTypePointer Output %v2float
%mat4v4float = OpTypeMatrix %v4float 4
%type_ConstantBuffer_MatrixConstant = OpTypeStruct %mat4v4float
%_runtimearr_type_ConstantBuffer_MatrixConstant = OpTypeRuntimeArray %type_ConstantBuffer_MatrixConstant
%_ptr_Uniform__runtimearr_type_ConstantBuffer_MatrixConstant = OpTypePointer Uniform %_runtimearr_type_ConstantBuffer_MatrixConstant
%type_ConstantBuffer_TextureConstants = OpTypeStruct %v2float %v2float %uint
%_runtimearr_type_ConstantBuffer_TextureConstants = OpTypeRuntimeArray %type_ConstantBuffer_TextureConstants
%_ptr_Uniform__runtimearr_type_ConstantBuffer_TextureConstants = OpTypePointer Uniform %_runtimearr_type_ConstantBuffer_TextureConstants
       %void = OpTypeVoid
         %44 = OpTypeFunction %void
%_ptr_Function_v2float = OpTypePointer Function %v2float
     %uint_4 = OpConstant %uint 4
%_arr_v2float_uint_4 = OpTypeArray %v2float %uint_4
%_ptr_Function__arr_v2float_uint_4 = OpTypePointer Function %_arr_v2float_uint_4
%mat2v2float = OpTypeMatrix %v2float 2
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
%_ptr_Uniform_type_ConstantBuffer_MatrixConstant = OpTypePointer Uniform %type_ConstantBuffer_MatrixConstant
%_ptr_Uniform_type_ConstantBuffer_TextureConstants = OpTypePointer Uniform %type_ConstantBuffer_TextureConstants
%pushConstants = OpVariable %_ptr_Uniform_type_ConstantBuffer_PushConstants Uniform
%in_var_POSITION = OpVariable %_ptr_Input_v2float Input
%in_var_WIDTH = OpVariable %_ptr_Input_float Input
%in_var_HEIGHT = OpVariable %_ptr_Input_float Input
%in_var_TEXCOORD0 = OpVariable %_ptr_Input_v4float Input
%in_var_ROTORIGIN = OpVariable %_ptr_Input_v2float Input
%in_var_ROTATION = OpVariable %_ptr_Input_float Input
%in_var_COLOR = OpVariable %_ptr_Input_v4float Input
%gl_VertexIndex = OpVariable %_ptr_Input_uint Input
%gl_Position = OpVariable %_ptr_Output_v4float Output
%out_var_COLOR = OpVariable %_ptr_Output_v4float Output
%out_var_TEXCOORD0 = OpVariable %_ptr_Output_v2float Output
%ResourceDescriptorHeap = OpVariable %_ptr_Uniform__runtimearr_type_ConstantBuffer_MatrixConstant Uniform
%ResourceDescriptorHeap_0 = OpVariable %_ptr_Uniform__runtimearr_type_ConstantBuffer_MatrixConstant Uniform
%ResourceDescriptorHeap_1 = OpVariable %_ptr_Uniform__runtimearr_type_ConstantBuffer_TextureConstants Uniform
         %53 = OpConstantComposite %v2float %float_0 %float_0
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
     %uint_1 = OpConstant %uint 1
     %VSMain = OpFunction %void None %44
         %56 = OpLabel
         %57 = OpVariable %_ptr_Function__arr_v2float_uint_4 Function
         %58 = OpVariable %_ptr_Function__arr_v2float_uint_4 Function
         %59 = OpLoad %v2float %in_var_POSITION
         %60 = OpLoad %float %in_var_WIDTH
         %61 = OpLoad %float %in_var_HEIGHT
         %62 = OpLoad %v4float %in_var_TEXCOORD0
         %63 = OpLoad %v2float %in_var_ROTORIGIN
         %64 = OpLoad %float %in_var_ROTATION
         %65 = OpLoad %v4float %in_var_COLOR
         %66 = OpLoad %uint %gl_VertexIndex
         %67 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_3
         %68 = OpLoad %uint %67
         %69 = OpAccessChain %_ptr_Uniform_type_ConstantBuffer_MatrixConstant %ResourceDescriptorHeap %68
         %70 = OpLoad %type_ConstantBuffer_MatrixConstant %69
         %71 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_4
         %72 = OpLoad %uint %71
         %73 = OpAccessChain %_ptr_Uniform_type_ConstantBuffer_MatrixConstant %ResourceDescriptorHeap_0 %72
         %74 = OpLoad %type_ConstantBuffer_MatrixConstant %73
         %75 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_5
         %76 = OpLoad %uint %75
         %77 = OpAccessChain %_ptr_Uniform_type_ConstantBuffer_TextureConstants %ResourceDescriptorHeap_1 %76
         %78 = OpAccessChain %_ptr_Uniform_v2float %77 %uint_1
         %79 = OpLoad %v2float %78
         %80 = OpCompositeConstruct %v2float %60 %float_0
         %81 = OpCompositeConstruct %v2float %float_0 %61
         %82 = OpCompositeConstruct %v2float %60 %61
         %83 = OpCompositeConstruct %_arr_v2float_uint_4 %53 %80 %81 %82
               OpStore %57 %83
         %84 = OpVectorShuffle %v2float %62 %62 0 1
         %85 = OpVectorShuffle %v2float %62 %62 2 1
         %86 = OpVectorShuffle %v2float %62 %62 0 3
         %87 = OpVectorShuffle %v2float %62 %62 2 3
         %88 = OpCompositeConstruct %_arr_v2float_uint_4 %84 %85 %86 %87
               OpStore %58 %88
         %89 = OpExtInst %float %1 Cos %64
         %90 = OpExtInst %float %1 Sin %64
         %91 = OpFNegate %float %90
         %92 = OpCompositeConstruct %v2float %89 %91
         %93 = OpCompositeConstruct %v2float %90 %89
         %94 = OpCompositeConstruct %mat2v2float %92 %93
         %95 = OpAccessChain %_ptr_Function_v2float %57 %66
         %96 = OpLoad %v2float %95
         %97 = OpFSub %v2float %96 %63
         %98 = OpMatrixTimesVector %v2float %94 %97
         %99 = OpFAdd %v2float %98 %63
        %100 = OpFAdd %v2float %99 %59
        %101 = OpCompositeExtract %float %100 0
        %102 = OpCompositeExtract %float %100 1
        %103 = OpCompositeConstruct %v4float %101 %102 %float_0 %float_1
        %104 = OpCompositeExtract %mat4v4float %70 0
        %105 = OpMatrixTimesVector %v4float %104 %103
        %106 = OpCompositeExtract %mat4v4float %74 0
        %107 = OpMatrixTimesVector %v4float %106 %105
        %108 = OpAccessChain %_ptr_Function_v2float %58 %66
        %109 = OpLoad %v2float %108
        %110 = OpFMul %v2float %109 %79
               OpStore %gl_Position %107
               OpStore %out_var_COLOR %65
               OpStore %out_var_TEXCOORD0 %110
               OpReturn
               OpFunctionEnd

#endif

const unsigned char g_VS_InstancedTransformedSprite[] = {
  0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00,
  0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0xb6, 0x14, 0x00, 0x00,
  0x0a, 0x00, 0x08, 0x00, 0x53, 0x50, 0x56, 0x5f, 0x45, 0x58, 0x54, 0x5f,
  0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x69,
  0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x00, 0x0b, 0x00, 0x06, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64,
  0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x10, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x53, 0x4d, 0x61,
  0x69, 0x6e, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00,
  0x05, 0x00, 0x0b, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65,
  0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66,
  0x66, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x73,
  0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x0b, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x73, 0x74, 0x65, 0x6e, 0x63, 0x69, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
  0x6e, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x73, 0x61, 0x6d, 0x70,
  0x6c, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x08, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x76, 0x69, 0x65, 0x77,
  0x50, 0x72, 0x6f, 0x6a, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x49, 0x6e,
  0x64, 0x65, 0x78, 0x00, 0x06, 0x00, 0x09, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43,
  0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65,
  0x78, 0x00, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f,
  0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x72, 0x61, 0x77, 0x4f, 0x72, 0x53, 0x74, 0x72,
  0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65,
  0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x70, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x73,
  0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x50,
  0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x57,
  0x49, 0x44, 0x54, 0x48, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x48,
  0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x52, 0x4f, 0x54, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x52, 0x4f, 0x54, 0x41, 0x54,
  0x49, 0x4f, 0x4e, 0x00, 0x05, 0x00, 0x06, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x43, 0x4f, 0x4c, 0x4f, 0x52,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x6f, 0x75, 0x74, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x6f, 0x75, 0x74, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x30, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
  0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61,
  0x6e, 0x74, 0x00, 0x00, 0x06, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65,
  0x61, 0x70, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
  0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00,
  0x05, 0x00, 0x0c, 0x00, 0x13, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65,
  0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66,
  0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43,
  0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x06, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x00,
  0x06, 0x00, 0x08, 0x00, 0x13, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x6d, 0x73, 0x61, 0x61,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
  0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00,
  0x05, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00, 0x56, 0x53, 0x4d, 0x61,
  0x69, 0x6e, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x03, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x16, 0x00, 0x03, 0x00, 0x19, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x15, 0x00, 0x04, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x0a, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x03, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x03, 0x00,
  0x27, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x03, 0x00,
  0x29, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x02, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x35, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x36, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x37, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x43, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x43, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x33, 0x00, 0x00, 0x00,
  0x45, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,
  0x45, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x33, 0x00, 0x00, 0x00,
  0x49, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x10, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00,
  0x49, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x4b, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x4b, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x4d, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x41, 0x00, 0x05, 0x00, 0x36, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00,
  0x4d, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x07, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00,
  0x35, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x39, 0x00, 0x00, 0x00,
  0x53, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x4f, 0x00, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x03, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x06, 0x00, 0x19, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x06, 0x00, 0x19, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x7f, 0x00, 0x04, 0x00, 0x19, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x61, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00,
  0x91, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00,
  0x5e, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x19, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x26, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x69, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x26, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00,
  0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x05, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00,
  0x69, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x6c, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00,
  0x6c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x6e, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x03, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x03, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x03, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00,
  0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00
};

#else

#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; POSITION                 0   xy          0     NONE   float   xy  
; WIDTH                    0   x           1     NONE   float   x   
; HEIGHT                   0   x           2     NONE   float   x   
; TEXCOORD                 0   xyzw        3     NONE   float   xyzw
; ROTORIGIN                0   xy          4     NONE   float   xy  
; ROTATION                 0   x           5     NONE   float   x   
; COLOR                    0   xyzw        6     NONE   float   xyzw
; SV_VertexID              0   x           7   VERTID    uint   x   
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyzw
; COLOR                    0   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
; shader hash: 50f7c1720af07ee6e546e91a47c66d0f
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 8
; SigOutputElements: 3
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 8
; SigOutputVectors[0]: 3
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: VSMain
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; POSITION                 0                              
; WIDTH                    0                              
; HEIGHT                   0                              
; TEXCOORD                 0                              
; ROTORIGIN                0                              
; ROTATION                 0                              
; COLOR                    0                              
; SV_VertexID              0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [32 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 29, outputs: 10
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 4, 8, 16, 17, 20, 28 }
;   output 1 depends on inputs: { 0, 1, 4, 8, 16, 17, 20, 28 }
;   output 2 depends on inputs: { 0, 1, 4, 8, 16, 17, 20, 28 }
;   output 3 depends on inputs: { 0, 1, 4, 8, 16, 17, 20, 28 }
;   output 4 depends on inputs: { 24 }
;   output 5 depends on inputs: { 25 }
;   output 6 depends on inputs: { 26 }
;   output 7 depends on inputs: { 27 }
;   output 8 depends on inputs: { 12, 14, 28 }
;   output 9 depends on inputs: { 13, 15, 28 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%pushConstants = type { %struct.PushConstants }
%struct.PushConstants = type { i32, i32, i32, i32, i32, i32, i32, i32 }

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

define void @VSMain() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 32 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call i32 @dx.op.loadInput.i32(i32 4, i32 7, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %19 = alloca [4 x float], align 4
  %20 = alloca [4 x float], align 4
  %21 = alloca [4 x float], align 4
  %22 = alloca [4 x float], align 4
  %23 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %24 = extractvalue %dx.types.CBufRet.i32 %23, 3
  %25 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %24, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %25, %dx.types.ResourceProperties { i32 13, i32 64 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %27 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %28 = extractvalue %dx.types.CBufRet.i32 %27, 0
  %29 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %28, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %30 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %29, %dx.types.ResourceProperties { i32 13, i32 64 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %31 = extractvalue %dx.types.CBufRet.i32 %27, 1
  %32 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %31, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %33 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %32, %dx.types.ResourceProperties { i32 13, i32 20 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %34 = bitcast [4 x float]* %21 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %34) #0
  %35 = bitcast [4 x float]* %22 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %35) #0
  %36 = getelementptr [4 x float], [4 x float]* %21, i32 0, i32 0
  %37 = getelementptr [4 x float], [4 x float]* %22, i32 0, i32 0
  store float 0.000000e+00, float* %36, align 4
  store float 0.000000e+00, float* %37, align 4
  %38 = getelementptr [4 x float], [4 x float]* %21, i32 0, i32 1
  %39 = getelementptr [4 x float], [4 x float]* %22, i32 0, i32 1
  store float %16, float* %38, align 4
  store float 0.000000e+00, float* %39, align 4
  %40 = getelementptr [4 x float], [4 x float]* %21, i32 0, i32 2
  %41 = getelementptr [4 x float], [4 x float]* %22, i32 0, i32 2
  store float 0.000000e+00, float* %40, align 4
  store float %15, float* %41, align 4
  %42 = getelementptr [4 x float], [4 x float]* %21, i32 0, i32 3
  %43 = getelementptr [4 x float], [4 x float]* %22, i32 0, i32 3
  store float %16, float* %42, align 4
  store float %15, float* %43, align 4
  %44 = bitcast [4 x float]* %19 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %44) #0
  %45 = bitcast [4 x float]* %20 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %45) #0
  %46 = getelementptr [4 x float], [4 x float]* %19, i32 0, i32 0
  %47 = getelementptr [4 x float], [4 x float]* %20, i32 0, i32 0
  store float %11, float* %46, align 4
  store float %12, float* %47, align 4
  %48 = getelementptr [4 x float], [4 x float]* %19, i32 0, i32 1
  %49 = getelementptr [4 x float], [4 x float]* %20, i32 0, i32 1
  store float %13, float* %48, align 4
  store float %12, float* %49, align 4
  %50 = getelementptr [4 x float], [4 x float]* %19, i32 0, i32 2
  %51 = getelementptr [4 x float], [4 x float]* %20, i32 0, i32 2
  store float %11, float* %50, align 4
  store float %14, float* %51, align 4
  %52 = getelementptr [4 x float], [4 x float]* %19, i32 0, i32 3
  %53 = getelementptr [4 x float], [4 x float]* %20, i32 0, i32 3
  store float %13, float* %52, align 4
  store float %14, float* %53, align 4
  %54 = call float @dx.op.unary.f32(i32 12, float %8)  ; Cos(value)
  %55 = call float @dx.op.unary.f32(i32 13, float %8)  ; Sin(value)
  %56 = getelementptr [4 x float], [4 x float]* %21, i32 0, i32 %3
  %57 = getelementptr [4 x float], [4 x float]* %22, i32 0, i32 %3
  %58 = load float, float* %56, align 4
  %59 = load float, float* %57, align 4
  %60 = fsub fast float %58, %9
  %61 = fsub fast float %59, %10
  %62 = fmul fast float %60, %54
  %63 = call float @dx.op.tertiary.f32(i32 46, float %61, float %55, float %62)  ; FMad(a,b,c)
  %64 = fmul fast float %55, %60
  %65 = fsub fast float -0.000000e+00, %64
  %66 = call float @dx.op.tertiary.f32(i32 46, float %61, float %54, float %65)  ; FMad(a,b,c)
  %67 = fadd fast float %17, %9
  %68 = fadd fast float %67, %63
  %69 = fadd fast float %18, %10
  %70 = fadd fast float %69, %66
  %71 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %72 = extractvalue %dx.types.CBufRet.f32 %71, 0
  %73 = extractvalue %dx.types.CBufRet.f32 %71, 1
  %74 = extractvalue %dx.types.CBufRet.f32 %71, 3
  %75 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %76 = extractvalue %dx.types.CBufRet.f32 %75, 0
  %77 = extractvalue %dx.types.CBufRet.f32 %75, 1
  %78 = extractvalue %dx.types.CBufRet.f32 %75, 3
  %79 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %80 = extractvalue %dx.types.CBufRet.f32 %79, 0
  %81 = extractvalue %dx.types.CBufRet.f32 %79, 1
  %82 = extractvalue %dx.types.CBufRet.f32 %79, 3
  %83 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %26, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %84 = extractvalue %dx.types.CBufRet.f32 %83, 0
  %85 = extractvalue %dx.types.CBufRet.f32 %83, 1
  %86 = extractvalue %dx.types.CBufRet.f32 %83, 3
  %87 = fmul fast float %72, %68
  %88 = call float @dx.op.tertiary.f32(i32 46, float %70, float %73, float %87)  ; FMad(a,b,c)
  %89 = fadd fast float %88, %74
  %90 = fmul fast float %76, %68
  %91 = call float @dx.op.tertiary.f32(i32 46, float %70, float %77, float %90)  ; FMad(a,b,c)
  %92 = fadd fast float %91, %78
  %93 = fmul fast float %80, %68
  %94 = call float @dx.op.tertiary.f32(i32 46, float %70, float %81, float %93)  ; FMad(a,b,c)
  %95 = fadd fast float %94, %82
  %96 = fmul fast float %84, %68
  %97 = call float @dx.op.tertiary.f32(i32 46, float %70, float %85, float %96)  ; FMad(a,b,c)
  %98 = fadd fast float %97, %86
  %99 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %30, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %100 = extractvalue %dx.types.CBufRet.f32 %99, 0
  %101 = extractvalue %dx.types.CBufRet.f32 %99, 1
  %102 = extractvalue %dx.types.CBufRet.f32 %99, 2
  %103 = extractvalue %dx.types.CBufRet.f32 %99, 3
  %104 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %30, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %105 = extractvalue %dx.types.CBufRet.f32 %104, 0
  %106 = extractvalue %dx.types.CBufRet.f32 %104, 1
  %107 = extractvalue %dx.types.CBufRet.f32 %104, 2
  %108 = extractvalue %dx.types.CBufRet.f32 %104, 3
  %109 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %30, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %110 = extractvalue %dx.types.CBufRet.f32 %109, 0
  %111 = extractvalue %dx.types.CBufRet.f32 %109, 1
  %112 = extractvalue %dx.types.CBufRet.f32 %109, 2
  %113 = extractvalue %dx.types.CBufRet.f32 %109, 3
  %114 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %30, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %115 = extractvalue %dx.types.CBufRet.f32 %114, 0
  %116 = extractvalue %dx.types.CBufRet.f32 %114, 1
  %117 = extractvalue %dx.types.CBufRet.f32 %114, 2
  %118 = extractvalue %dx.types.CBufRet.f32 %114, 3
  %119 = fmul fast float %100, %89
  %120 = call float @dx.op.tertiary.f32(i32 46, float %92, float %101, float %119)  ; FMad(a,b,c)
  %121 = call float @dx.op.tertiary.f32(i32 46, float %95, float %102, float %120)  ; FMad(a,b,c)
  %122 = call float @dx.op.tertiary.f32(i32 46, float %98, float %103, float %121)  ; FMad(a,b,c)
  %123 = fmul fast float %105, %89
  %124 = call float @dx.op.tertiary.f32(i32 46, float %92, float %106, float %123)  ; FMad(a,b,c)
  %125 = call float @dx.op.tertiary.f32(i32 46, float %95, float %107, float %124)  ; FMad(a,b,c)
  %126 = call float @dx.op.tertiary.f32(i32 46, float %98, float %108, float %125)  ; FMad(a,b,c)
  %127 = fmul fast float %110, %89
  %128 = call float @dx.op.tertiary.f32(i32 46, float %92, float %111, float %127)  ; FMad(a,b,c)
  %129 = call float @dx.op.tertiary.f32(i32 46, float %95, float %112, float %128)  ; FMad(a,b,c)
  %130 = call float @dx.op.tertiary.f32(i32 46, float %98, float %113, float %129)  ; FMad(a,b,c)
  %131 = fmul fast float %115, %89
  %132 = call float @dx.op.tertiary.f32(i32 46, float %92, float %116, float %131)  ; FMad(a,b,c)
  %133 = call float @dx.op.tertiary.f32(i32 46, float %95, float %117, float %132)  ; FMad(a,b,c)
  %134 = call float @dx.op.tertiary.f32(i32 46, float %98, float %118, float %133)  ; FMad(a,b,c)
  %135 = getelementptr [4 x float], [4 x float]* %19, i32 0, i32 %3
  %136 = getelementptr [4 x float], [4 x float]* %20, i32 0, i32 %3
  %137 = load float, float* %135, align 4
  %138 = load float, float* %136, align 4
  %139 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %33, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %140 = extractvalue %dx.types.CBufRet.f32 %139, 2
  %141 = extractvalue %dx.types.CBufRet.f32 %139, 3
  %142 = fmul fast float %140, %137
  %143 = fmul fast float %141, %138
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %122)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %126)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %130)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %134)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %4)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %5)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %142)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %143)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @llvm.lifetime.end(i64 16, i8* %44) #0
  call void @llvm.lifetime.end(i64 16, i8* %45) #0
  call void @llvm.lifetime.end(i64 16, i8* %34) #0
  call void @llvm.lifetime.end(i64 16, i8* %35) #0
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.loadInput.i32(i32, i32, i32, i8, i32) #1

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #1

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!7}
!dx.entryPoints = !{!8}

!0 = !{!"dxc(private) 1.8.0.4739 (d9a5e97d0)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 8}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{null, null, !5, null}
!5 = !{!6}
!6 = !{i32 0, %pushConstants* undef, !"", i32 0, i32 0, i32 1, i32 32, null}
!7 = !{[31 x i32] [i32 29, i32 10, i32 15, i32 15, i32 0, i32 0, i32 15, i32 0, i32 0, i32 0, i32 15, i32 0, i32 0, i32 0, i32 256, i32 512, i32 256, i32 512, i32 15, i32 15, i32 0, i32 0, i32 15, i32 0, i32 0, i32 0, i32 16, i32 32, i32 64, i32 128, i32 783]}
!8 = !{void ()* @VSMain, !"VSMain", !9, !4, !27}
!9 = !{!10, !23, null}
!10 = !{!11, !14, !16, !17, !19, !20, !21, !22}
!11 = !{i32 0, !"POSITION", i8 9, i8 0, !12, i8 0, i32 1, i8 2, i32 0, i8 0, !13}
!12 = !{i32 0}
!13 = !{i32 3, i32 3}
!14 = !{i32 1, !"WIDTH", i8 9, i8 0, !12, i8 0, i32 1, i8 1, i32 1, i8 0, !15}
!15 = !{i32 3, i32 1}
!16 = !{i32 2, !"HEIGHT", i8 9, i8 0, !12, i8 0, i32 1, i8 1, i32 2, i8 0, !15}
!17 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !12, i8 0, i32 1, i8 4, i32 3, i8 0, !18}
!18 = !{i32 3, i32 15}
!19 = !{i32 4, !"ROTORIGIN", i8 9, i8 0, !12, i8 0, i32 1, i8 2, i32 4, i8 0, !13}
!20 = !{i32 5, !"ROTATION", i8 9, i8 0, !12, i8 0, i32 1, i8 1, i32 5, i8 0, !15}
!21 = !{i32 6, !"COLOR", i8 9, i8 0, !12, i8 0, i32 1, i8 4, i32 6, i8 0, !18}
!22 = !{i32 7, !"SV_VertexID", i8 5, i8 1, !12, i8 0, i32 1, i8 1, i32 7, i8 0, !15}
!23 = !{!24, !25, !26}
!24 = !{i32 0, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 0, i8 0, !18}
!25 = !{i32 1, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 1, i8 0, !18}
!26 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !12, i8 2, i32 1, i8 2, i32 2, i8 0, !13}
!27 = !{i32 0, i64 1073741824}

#endif

const unsigned char g_VS_InstancedTransformedSprite[] = {
  0x44, 0x58, 0x42, 0x43, 0xaf, 0x2c, 0x6f, 0x26, 0x8d, 0xa4, 0x83, 0x1f,
  0xc8, 0xa6, 0xc4, 0x97, 0x76, 0x87, 0x5d, 0xf9, 0x01, 0x00, 0x00, 0x00,
  0xf8, 0x11, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x9c, 0x01, 0x00, 0x00, 0x28, 0x02, 0x00, 0x00,
  0x18, 0x04, 0x00, 0x00, 0x34, 0x04, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x4c, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x17, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x27, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x31, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49,
  0x54, 0x49, 0x4f, 0x4e, 0x00, 0x57, 0x49, 0x44, 0x54, 0x48, 0x00, 0x48,
  0x45, 0x49, 0x47, 0x48, 0x54, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x52, 0x4f, 0x54, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e,
  0x00, 0x52, 0x4f, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x43, 0x4f,
  0x4c, 0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x56, 0x65, 0x72, 0x74, 0x65,
  0x78, 0x49, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x84, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0xe8, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x03, 0x00, 0x08, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f,
  0x4e, 0x00, 0x57, 0x49, 0x44, 0x54, 0x48, 0x00, 0x48, 0x45, 0x49, 0x47,
  0x48, 0x54, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x52, 0x4f, 0x54, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x00, 0x52, 0x4f,
  0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x56, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x41, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x41, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x41, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x44, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x07, 0x41, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00,
  0x39, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x0f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x50, 0xf7, 0xc1, 0x72, 0x0a, 0xf0, 0x7e, 0xe6,
  0xe5, 0x46, 0xe9, 0x1a, 0x47, 0xc6, 0x6d, 0x0f, 0x44, 0x58, 0x49, 0x4c,
  0xbc, 0x0d, 0x00, 0x00, 0x66, 0x00, 0x01, 0x00, 0x6f, 0x03, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xa4, 0x0d, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x66, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x1b, 0x88, 0x40, 0x00, 0x96, 0x0d, 0x84, 0xf0,
  0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff,
  0xff, 0x1f, 0x00, 0x09, 0xa0, 0x36, 0x18, 0xc4, 0xff, 0xff, 0xff, 0xff,
  0x0f, 0x80, 0x04, 0x54, 0x00, 0x00, 0x00, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x84, 0x40, 0x98, 0x10, 0x0c, 0x13, 0x02,
  0x61, 0x42, 0x40, 0x00, 0x89, 0x20, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xb0, 0xc1, 0x08, 0xc0, 0x1c, 0x01, 0x28,
  0xcc, 0x11, 0x20, 0x24, 0x94, 0x01, 0x08, 0x06, 0x22, 0x4a, 0x00, 0x90,
  0x31, 0x03, 0x30, 0x47, 0x00, 0x06, 0xc5, 0x40, 0x92, 0x24, 0x11, 0x12,
  0x52, 0x8a, 0x91, 0x24, 0x49, 0x22, 0x24, 0xc4, 0x14, 0x03, 0x48, 0x92,
  0x44, 0x40, 0xc8, 0xb9, 0x67, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f,
  0x81, 0x66, 0x58, 0x08, 0x14, 0x0c, 0x73, 0x04, 0x41, 0x29, 0xa0, 0x24,
  0x89, 0x22, 0x92, 0x8e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0xb9,
  0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x8b, 0xdb, 0x46, 0x04, 0x82, 0x20, 0x48,
  0x21, 0xa8, 0x04, 0x4a, 0xa8, 0x2a, 0x03, 0x92, 0x20, 0x74, 0x1d, 0x35,
  0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b, 0x55, 0xac, 0xc4, 0xe4,
  0x23, 0xb7, 0x8d, 0x88, 0x24, 0x49, 0x92, 0x42, 0x64, 0x09, 0x94, 0x90,
  0x56, 0x0a, 0x24, 0x41, 0x10, 0x84, 0xb8, 0xdb, 0x86, 0xcb, 0x9f, 0xb0,
  0x87, 0x90, 0xfc, 0x95, 0x90, 0x1c, 0x2a, 0x12, 0x88, 0x34, 0x72, 0x1e,
  0x22, 0x9a, 0x10, 0x42, 0x42, 0x42, 0x92, 0x14, 0x02, 0x4a, 0x20, 0x8f,
  0xbe, 0x83, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x95, 0x90, 0x36,
  0xa4, 0x19, 0x10, 0x91, 0x24, 0x89, 0x50, 0x0a, 0x28, 0x09, 0x93, 0x88,
  0xc4, 0x81, 0x80, 0xa3, 0xa4, 0x29, 0xa2, 0x84, 0xc9, 0x4f, 0x29, 0xe9,
  0xe0, 0x9c, 0x46, 0x9a, 0x80, 0x66, 0x92, 0x10, 0x92, 0x24, 0x49, 0x92,
  0x24, 0x49, 0x72, 0xcd, 0x43, 0x49, 0x07, 0xe7, 0x34, 0xd2, 0x04, 0x34,
  0x93, 0x84, 0x82, 0x92, 0xcc, 0xfc, 0x48, 0x92, 0x00, 0xa1, 0x94, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x1e,
  0x02, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x04, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x28, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x61, 0x80, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x47, 0x02, 0x02, 0x40, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x05, 0x04, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0b, 0x08, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1a, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x38,
  0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2,
  0x7c, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
  0xe4, 0x11, 0x03, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc8, 0x02, 0x01, 0x17, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x0a,
  0x0a, 0x10, 0x10, 0x10, 0x10, 0x81, 0x84, 0x92, 0x18, 0x01, 0x28, 0x82,
  0x12, 0x28, 0x84, 0x52, 0x28, 0x03, 0x4a, 0x4a, 0xa0, 0x18, 0x0a, 0x62,
  0x04, 0xa0, 0x80, 0xca, 0xa0, 0x08, 0xca, 0xa3, 0x10, 0x4a, 0xa1, 0x1c,
  0xe8, 0x9c, 0x01, 0x20, 0x74, 0xac, 0xaf, 0x53, 0x9e, 0x07, 0x00, 0x1e,
  0x00, 0x00, 0x1e, 0x00, 0x00, 0x40, 0x04, 0x84, 0x40, 0x04, 0x84, 0x9e,
  0x07, 0x00, 0x1e, 0x00, 0x00, 0x20, 0x30, 0x00, 0x05, 0x90, 0x78, 0x31,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x31, 0x20, 0xc3, 0x1b,
  0x43, 0x81, 0x93, 0x4b, 0xb3, 0x0b, 0xa3, 0x2b, 0x4b, 0x01, 0x89, 0x71,
  0xc1, 0x71, 0x81, 0x71, 0xa1, 0xb9, 0x99, 0xc9, 0x01, 0x41, 0x21, 0xcb,
  0x09, 0xab, 0x29, 0xcb, 0xb9, 0x21, 0x83, 0x49, 0xd9, 0x10, 0x04, 0x13,
  0x84, 0xa4, 0x9a, 0x20, 0x24, 0xd6, 0x06, 0x61, 0x20, 0x26, 0x08, 0xc9,
  0xb5, 0x41, 0x18, 0x0c, 0x0a, 0x76, 0x73, 0x1b, 0x06, 0x84, 0x20, 0x26,
  0x08, 0x09, 0x36, 0x41, 0x38, 0x03, 0x30, 0x20, 0x30, 0x41, 0x48, 0xb2,
  0x0d, 0x88, 0xb2, 0x30, 0x8a, 0x32, 0x34, 0xc0, 0x86, 0xc0, 0xd9, 0x40,
  0x00, 0xc0, 0x03, 0x4c, 0x10, 0xd0, 0x20, 0x0c, 0x36, 0x04, 0xd1, 0x04,
  0xe1, 0x10, 0x68, 0x58, 0x4d, 0x35, 0x85, 0xa5, 0xb9, 0x11, 0x81, 0x7a,
  0x9a, 0x4a, 0xa2, 0x4a, 0x7a, 0x72, 0x9a, 0x20, 0x08, 0xce, 0x04, 0x41,
  0x78, 0x36, 0x04, 0xca, 0x04, 0x41, 0x80, 0x26, 0x08, 0x89, 0xb6, 0x41,
  0xd0, 0xb4, 0x0d, 0x8b, 0x52, 0x59, 0x17, 0x76, 0x0d, 0x99, 0x72, 0x6d,
  0x2c, 0xae, 0x92, 0x88, 0xa8, 0x90, 0x26, 0x08, 0x42, 0xb4, 0x41, 0xd0,
  0x86, 0x0d, 0xcb, 0xd0, 0x59, 0x17, 0x76, 0x0d, 0xde, 0x70, 0x7d, 0x13,
  0x84, 0x64, 0xa3, 0x81, 0x54, 0x94, 0x74, 0x84, 0x44, 0xb5, 0x61, 0x09,
  0x03, 0x31, 0xb0, 0x2e, 0xec, 0x1a, 0xbc, 0x30, 0xb8, 0x3e, 0x22, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x13, 0x04, 0x41, 0x9a, 0x20,
  0x24, 0xdc, 0x06, 0x41, 0x33, 0x83, 0x0d, 0x8b, 0x46, 0x06, 0xd6, 0x85,
  0x5d, 0x43, 0x19, 0x68, 0xd7, 0x19, 0x4c, 0x10, 0x92, 0x8e, 0x89, 0xd4,
  0x13, 0xd5, 0x93, 0x54, 0xd2, 0x51, 0x92, 0xd3, 0x86, 0x25, 0x0d, 0xd4,
  0xc0, 0xba, 0xb0, 0x6b, 0xc8, 0xd2, 0xe0, 0xda, 0x26, 0x08, 0x89, 0x47,
  0x44, 0xea, 0x89, 0x2a, 0x88, 0x2a, 0xe9, 0xc9, 0x69, 0xc3, 0xc2, 0x06,
  0x6d, 0x60, 0x5d, 0xd8, 0x35, 0x78, 0x6c, 0x70, 0x7d, 0x2c, 0x86, 0x9e,
  0x98, 0x9e, 0xa4, 0x36, 0x2c, 0xc4, 0x1b, 0x58, 0x17, 0x76, 0x0d, 0x65,
  0x40, 0x5c, 0x67, 0x30, 0x41, 0x48, 0x3e, 0x2e, 0x53, 0x56, 0x5f, 0x56,
  0x65, 0x72, 0x74, 0x65, 0x78, 0x49, 0x44, 0x13, 0x04, 0x61, 0xda, 0xb0,
  0xc4, 0x81, 0x1c, 0xcc, 0x81, 0x87, 0x5d, 0x83, 0x17, 0x07, 0xd7, 0xb7,
  0x01, 0xe1, 0xc0, 0x60, 0x0c, 0xd0, 0x60, 0x0d, 0xdc, 0x00, 0x0e, 0xe8,
  0x80, 0xcb, 0x94, 0xd5, 0x17, 0xd4, 0xdb, 0x5c, 0x1a, 0x5d, 0xda, 0x9b,
  0xdb, 0x04, 0x41, 0xa0, 0x36, 0x2c, 0x8a, 0x1d, 0x58, 0x77, 0x80, 0x95,
  0xc1, 0x50, 0x06, 0xca, 0x75, 0x06, 0x1b, 0x96, 0xe1, 0x0d, 0xac, 0x0b,
  0xcb, 0x86, 0x32, 0x18, 0xae, 0x33, 0xd8, 0xb0, 0x84, 0x01, 0x19, 0x58,
  0x17, 0x96, 0x0d, 0x59, 0x18, 0x5c, 0xdb, 0x86, 0x01, 0x0f, 0xf2, 0x40,
  0x0f, 0x36, 0x0c, 0x75, 0xb0, 0x07, 0xc0, 0x04, 0x21, 0x68, 0x36, 0x08,
  0x4a, 0x1f, 0x6c, 0x28, 0x26, 0x8a, 0x0f, 0x20, 0x3f, 0xa8, 0xc2, 0xc6,
  0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa,
  0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09,
  0x88, 0x26, 0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53,
  0x02, 0xa3, 0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c,
  0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94, 0x00, 0x29, 0x43, 0x86, 0xe7, 0x22,
  0x57, 0x36, 0xf7, 0x56, 0x27, 0x37, 0x56, 0x36, 0x37, 0x25, 0x78, 0xea,
  0x90, 0xe1, 0xb9, 0xd8, 0xa5, 0x95, 0xdd, 0x25, 0x91, 0x4d, 0xd1, 0x85,
  0xd1, 0x95, 0x4d, 0x09, 0xa2, 0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74,
  0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x02, 0x3f, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x26, 0x60, 0xbc, 0xac,
  0x09, 0x20, 0x8d, 0x2d, 0x50, 0xc3, 0xe5, 0x3b, 0x8f, 0x0f, 0x34, 0x8d,
  0x33, 0x01, 0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x76, 0xb0, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25,
  0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x09, 0xdb, 0x70, 0xf9, 0xce,
  0xe3, 0x0b, 0x01, 0x55, 0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06,
  0x20, 0x60, 0x3e, 0x72, 0xdb, 0xc6, 0xd0, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0xcc,
  0x86, 0x34, 0x03, 0xd2, 0x18, 0x66, 0xa0, 0x0d, 0x97, 0xef, 0x3c, 0xbe,
  0x10, 0x11, 0xc0, 0x44, 0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0x4c,
  0x48, 0x00, 0x8f, 0x0d, 0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0,
  0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x1b, 0xc1, 0x34, 0x5c, 0xbe,
  0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x8f, 0xdc, 0xb6,
  0x15, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4,
  0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x29, 0x48, 0xc3, 0xe5, 0x3b, 0x8f,
  0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x08, 0xcf,
  0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x16,
  0x10, 0x2d, 0x4b, 0xc5, 0xf8, 0x0b, 0x52, 0x10, 0x13, 0xc2, 0x10, 0x3e,
  0xd1, 0x0c, 0x06, 0x30, 0x2d, 0x4b, 0xc5, 0xf8, 0x0b, 0x52, 0x10, 0x13,
  0xc2, 0x10, 0xbe, 0x34, 0x01, 0xd1, 0x04, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x7f, 0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x14, 0x14, 0x08, 0x45, 0x23, 0x00, 0x94, 0x14,
  0x46, 0x71, 0xcd, 0x00, 0x94, 0x5d, 0xc1, 0x0e, 0x94, 0x46, 0xd1, 0x0e,
  0x94, 0xec, 0x40, 0x01, 0x06, 0x14, 0x0a, 0x21, 0x63, 0x04, 0x20, 0x08,
  0x82, 0x20, 0x28, 0x8c, 0x00, 0x90, 0x37, 0x87, 0x90, 0x06, 0x6c, 0x30,
  0x87, 0x90, 0x06, 0xd9, 0x1c, 0x42, 0x1a, 0xb4, 0x01, 0x85, 0x73, 0x10,
  0x18, 0x86, 0x41, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x20, 0x06,
  0x68, 0x90, 0x04, 0x5c, 0x34, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x9f,
  0x1a, 0x34, 0x01, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x8c, 0x1c,
  0x64, 0x97, 0x77, 0x06, 0xd0, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x28,
  0x74, 0xa0, 0x85, 0xc1, 0x87, 0x06, 0xd1, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x28, 0x75, 0xb0, 0x89, 0x01, 0x18, 0x9c, 0x81, 0x34, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x8a, 0x1d, 0x70, 0x63, 0x10, 0x06, 0x69, 0x30,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x72, 0x07, 0x1d, 0x19, 0x88,
  0x81, 0x19, 0x50, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xe0, 0x81,
  0xd7, 0x8d, 0x01, 0x1b, 0x54, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0,
  0xe4, 0xc1, 0xf7, 0x91, 0x41, 0x1b, 0x58, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0xa0, 0xe8, 0x01, 0x18, 0x80, 0x41, 0x19, 0xb0, 0xc1, 0x35, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0xca, 0x1e, 0x84, 0x01, 0x19, 0x98, 0xc1,
  0x1b, 0x60, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0xf0, 0x81, 0x18,
  0x94, 0xc1, 0x19, 0xb8, 0x41, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x4a, 0x1f, 0x8c, 0x81, 0x19, 0xa0, 0x01, 0x1c, 0x68, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0xa0, 0xf8, 0x01, 0x19, 0x9c, 0x41, 0x1a, 0xb4, 0xc1,
  0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xca, 0x1f, 0x94, 0xc1, 0x19,
  0xa8, 0xc1, 0x1c, 0x70, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0x80,
  0x82, 0x19, 0xb8, 0xc1, 0x1a, 0xd0, 0x41, 0x37, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0x4a, 0x28, 0x9c, 0x01, 0x1b, 0xb0, 0x41, 0x1d, 0x78, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0xa0, 0x88, 0x02, 0x1a, 0xb4, 0x41, 0x1b,
  0xd0, 0xc1, 0x37, 0x13, 0x91, 0x06, 0x49, 0x35, 0x0a, 0x33, 0x11, 0x69,
  0x90, 0x54, 0xa3, 0x30, 0x13, 0x91, 0x06, 0x49, 0x35, 0x0a, 0x33, 0x11,
  0x69, 0x90, 0x54, 0xa3, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x5a,
  0x28, 0x8c, 0x41, 0x25, 0x07, 0xa3, 0x09, 0xc1, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x92, 0x29, 0x88, 0x41, 0x90, 0x06, 0x69, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x9f, 0x28, 0x94, 0x41, 0xd0, 0x8d, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0x81, 0x56, 0x0a, 0x67, 0x90, 0xe5, 0xc1, 0x68,
  0x42, 0x00, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xa4, 0x0a, 0x66,
  0x10, 0xb4, 0x41, 0x1b, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x67,
  0x0a, 0x69, 0x10, 0x84, 0xc1, 0x68, 0x02, 0x11, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x81, 0xd4, 0x0a, 0x69, 0x10, 0xc0, 0x01, 0x1c, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0xc1, 0x97, 0x0a, 0x6c, 0x10, 0x88, 0xc1, 0x35,
  0xc3, 0x8e, 0x18, 0x18, 0x03, 0x08, 0x82, 0x01, 0x61, 0x0b, 0x74, 0x10,
  0x5c, 0x33, 0xec, 0x88, 0x81, 0x31, 0x80, 0x20, 0x18, 0x10, 0xb7, 0x50,
  0x07, 0xc1, 0x4a, 0x87, 0xe7, 0x0f, 0xfe, 0x60, 0xa5, 0xc3, 0x03, 0x0a,
  0xa0, 0x30, 0x6c, 0x40, 0x08, 0x6a, 0x30, 0x00, 0xc3, 0x06, 0x44, 0xa0,
  0x06, 0x03, 0xb0, 0xd2, 0x21, 0x0a, 0x05, 0x52, 0x58, 0xe9, 0x10, 0x89,
  0x42, 0x29, 0x0c, 0x1b, 0x10, 0x02, 0x36, 0x00, 0xc3, 0x06, 0x44, 0xc0,
  0x06, 0x03, 0xb0, 0xd2, 0x61, 0x1a, 0x05, 0x50, 0x58, 0xe9, 0x30, 0x91,
  0x42, 0x28, 0x0c, 0x1b, 0x10, 0x82, 0x1b, 0x0c, 0xc0, 0xb0, 0x01, 0x11,
  0x6c, 0x03, 0xb0, 0xd2, 0xa1, 0x2a, 0x85, 0x51, 0x58, 0xe9, 0x50, 0x99,
  0x02, 0x29, 0x0c, 0x1b, 0x10, 0x02, 0x37, 0x00, 0xc3, 0x06, 0x44, 0xd0,
  0x0d, 0xc0, 0x65, 0xc3, 0x8e, 0x18, 0x18, 0x03, 0x08, 0x82, 0x01, 0x01,
  0x0e, 0x7e, 0x10, 0x5c, 0x36, 0xec, 0x88, 0x81, 0x31, 0x80, 0x20, 0x18,
  0x10, 0xe1, 0xf0, 0x07, 0xc1, 0x4a, 0x87, 0x2d, 0x15, 0x52, 0x61, 0xa5,
  0xc3, 0xa6, 0x0a, 0xaa, 0x30, 0x6c, 0x40, 0x08, 0x65, 0x30, 0x00, 0xc3,
  0x06, 0x44, 0x40, 0x06, 0x03, 0xb0, 0xd2, 0xa1, 0x5b, 0x05, 0x57, 0x58,
  0xe9, 0xd0, 0xb1, 0xc2, 0x2b, 0x0c, 0x1b, 0x10, 0x42, 0x19, 0x0c, 0xc0,
  0xb0, 0x01, 0x11, 0x98, 0xc1, 0x00, 0xac, 0x74, 0xf8, 0x5a, 0x41, 0x15,
  0x56, 0x3a, 0x7c, 0xae, 0xb0, 0x0a, 0xc3, 0x06, 0x84, 0x90, 0x06, 0x03,
  0x30, 0x6c, 0x40, 0x04, 0x66, 0x30, 0x00, 0x2b, 0x1d, 0xc2, 0xe0, 0x15,
  0x5a, 0x61, 0xa5, 0x43, 0x18, 0xc0, 0x82, 0x2b, 0x0c, 0x1b, 0x10, 0x42,
  0x1a, 0x0c, 0xc0, 0xb0, 0x01, 0x11, 0xa0, 0xc1, 0x00, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0xc1, 0x15, 0x0e, 0xa5, 0xe0, 0x06, 0x23, 0x06, 0x06,
  0x00, 0x82, 0x60, 0x70, 0x89, 0x43, 0x28, 0xbc, 0xc1, 0x4a, 0x87, 0x31,
  0x98, 0x85, 0x3a, 0x58, 0xe9, 0x30, 0x06, 0xb4, 0x60, 0x07, 0x24, 0x20,
  0x83, 0x04, 0x64, 0x98, 0x30, 0x07, 0xf1, 0x31, 0x61, 0x0e, 0xe2, 0x63,
  0x02, 0x22, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xe0, 0xd0, 0xa1,
  0x15, 0x04, 0x24, 0xb0, 0x84, 0x90, 0x8f, 0x99, 0x42, 0x10, 0x9f, 0x11,
  0x03, 0x04, 0x00, 0x41, 0x30, 0xe0, 0xd6, 0x01, 0x16, 0x0a, 0x26, 0x30,
  0x39, 0xd0, 0x03, 0xf8, 0x58, 0x50, 0xc0, 0xc7, 0xe6, 0x60, 0x0f, 0xe0,
  0x63, 0x01, 0x01, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xa8, 0xe6,
  0x61, 0x16, 0xda, 0x40, 0x1c, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08,
  0x46, 0x13, 0x86, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xaa, 0x7b,
  0xb8, 0x85, 0x38, 0x48, 0x87, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82,
  0xd1, 0x84, 0x61, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x6a, 0x1f,
  0x76, 0xa1, 0x0e, 0xce, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x18, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xfa, 0x87,
  0x5f, 0xc8, 0x03, 0x76, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18,
  0x4d, 0x18, 0x06, 0x7b, 0x26, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82,
  0x01, 0x17, 0x12, 0xe6, 0x20, 0x3d, 0x81, 0x05, 0x0f, 0x74, 0xcc, 0xb1,
  0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x1c, 0x49, 0xa4, 0x43,
  0xe5, 0x04, 0x16, 0x38, 0xd0, 0xb1, 0x26, 0x93, 0xcf, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x70, 0x27, 0xc1, 0x0e, 0x58, 0x13, 0x58, 0xd0, 0x40,
  0xc7, 0x18, 0x4e, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xc0, 0xa9,
  0xc4, 0x3b, 0x6c, 0x4c, 0x60, 0x01, 0x03, 0x9d, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0xa8, 0x5e, 0xe2, 0x1d, 0x4a, 0xc1, 0x1f, 0x46, 0x13, 0x02,
  0x60, 0x34, 0x41, 0x08, 0x46, 0x13, 0x06, 0x61, 0x34, 0x81, 0x18, 0x46,
  0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xa2, 0x09, 0x7a, 0x50, 0x05, 0x93,
  0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0xd1,
  0x04, 0x62, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x2a, 0x27, 0xf2,
  0xe1, 0x15, 0x4a, 0x62, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34,
  0x61, 0x10, 0x46, 0x13, 0x88, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c,
  0x2a, 0x9f, 0xf0, 0x07, 0x5a, 0x58, 0x89, 0xd1, 0x84, 0x00, 0x18, 0x4d,
  0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x06, 0x9b, 0x3c, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x17, 0x16, 0x26, 0xc1, 0x4d,
  0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x70, 0x62, 0x71, 0x12, 0xda,
  0x14, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x37, 0x16, 0x28, 0x81,
  0x4d, 0x81, 0x49, 0x62, 0x20, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30,
  0xe0, 0xca, 0x42, 0x25, 0xc0, 0x40, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04,
  0xc1, 0x80, 0x33, 0x8b, 0x95, 0xf0, 0xa4, 0x60, 0xc4, 0x00, 0x01, 0x40,
  0x10, 0x0c, 0xb8, 0xb3, 0x60, 0x09, 0x4e, 0x0a, 0x2c, 0x32, 0x03, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x01, 0x97, 0x16, 0x2e, 0x41, 0x06,
  0x51, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x9c, 0x5a, 0xbc, 0x84,
  0x18, 0x44, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x70, 0x6b, 0x01,
  0x13, 0x60, 0x10, 0x05, 0x06, 0xa9, 0x81, 0x7c, 0x46, 0x0c, 0x10, 0x00,
  0x04, 0xc1, 0x80, 0x6b, 0x0b, 0x99, 0x40, 0x03, 0x28, 0x18, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x03, 0xce, 0x2d, 0x66, 0xc2, 0x0c, 0xa0, 0x60, 0xc4,
  0x00, 0x01, 0x40, 0x10, 0x0c, 0xb8, 0xb7, 0xa0, 0x09, 0x32, 0x80, 0x82,
  0x95, 0x0e, 0xf4, 0x20, 0x16, 0x24, 0xb1, 0xd2, 0x81, 0x1e, 0xc6, 0xa2,
  0x24, 0x48, 0x40, 0x06, 0x09, 0xc8, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0xea, 0x2e, 0x6e, 0x42, 0x1d, 0xcc, 0x62, 0x34, 0x21, 0x10, 0x46,
  0x13, 0x84, 0xc1, 0x84, 0x42, 0x3e, 0x26, 0x14, 0xf2, 0x19, 0x31, 0x48,
  0x00, 0x10, 0x04, 0x03, 0xc7, 0x2f, 0xca, 0x62, 0x2d, 0xd6, 0x82, 0x2e,
  0xac, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x70, 0xfc, 0xa2, 0x2c, 0xd6,
  0x62, 0x2d, 0xe4, 0x42, 0x1a, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xc7,
  0x2f, 0xca, 0x62, 0x2d, 0xd6, 0x62, 0x2e, 0x9c, 0x11, 0x83, 0x04, 0x00,
  0x41, 0x30, 0x70, 0xfc, 0xa2, 0x2c, 0xd6, 0x62, 0x2d, 0xde, 0x42, 0x19,
  0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xc7, 0x2f, 0xca, 0xc2, 0x2d, 0xd6,
  0x82, 0x2e, 0x58, 0x62, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x1c, 0xbf,
  0x28, 0x0b, 0xb7, 0x58, 0x0b, 0xb9, 0x58, 0x89, 0x11, 0x83, 0x04, 0x00,
  0x41, 0x30, 0x70, 0xfc, 0xa2, 0x2c, 0xdc, 0x62, 0x2d, 0xe6, 0x42, 0x25,
  0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0xc0, 0xf1, 0x8b, 0xb2, 0x70, 0x8b,
  0xb5, 0x78, 0x8b, 0x94, 0x18, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0xc7,
  0x2f, 0xca, 0x02, 0x2d, 0xd6, 0x82, 0x2e, 0x84, 0x11, 0x83, 0x04, 0x00,
  0x41, 0x30, 0x70, 0xfc, 0xa2, 0x2c, 0xd0, 0x62, 0x2d, 0xe4, 0x22, 0x18,
  0x31, 0x30, 0x06, 0x10, 0x04, 0x03, 0x42, 0x34, 0xc2, 0x82, 0x1c, 0x46,
  0x0c, 0x8c, 0x01, 0x04, 0xc1, 0x80, 0x10, 0x8d, 0xb0, 0x18, 0x87, 0x11,
  0x03, 0x63, 0x00, 0x41, 0x30, 0x20, 0x44, 0x23, 0x2c, 0xdc, 0x61, 0xc4,
  0xc0, 0x18, 0x40, 0x10, 0x0c, 0x08, 0xd1, 0x08, 0x8b, 0x76, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00
};

#endif
