#ifdef IGLO_VULKAN

#if 0
; SPIR-V
; Version: 1.0
; Generator: Google spiregg; 0
; Bound: 103
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %PSMain "PSMain" %in_var_TEXCOORD0 %in_var_RADIUS %in_var_SMOOTHING %in_var_BORDERTHICKNESS %in_var_COLOR0 %in_var_COLOR1 %in_var_COLOR2 %out_var_SV_TARGET
               OpExecutionMode %PSMain OriginUpperLeft
               OpSource HLSL 660
               OpName %in_var_TEXCOORD0 "in.var.TEXCOORD0"
               OpName %in_var_RADIUS "in.var.RADIUS"
               OpName %in_var_SMOOTHING "in.var.SMOOTHING"
               OpName %in_var_BORDERTHICKNESS "in.var.BORDERTHICKNESS"
               OpName %in_var_COLOR0 "in.var.COLOR0"
               OpName %in_var_COLOR1 "in.var.COLOR1"
               OpName %in_var_COLOR2 "in.var.COLOR2"
               OpName %out_var_SV_TARGET "out.var.SV_TARGET"
               OpName %PSMain "PSMain"
               OpDecorate %in_var_TEXCOORD0 Location 0
               OpDecorate %in_var_RADIUS Location 1
               OpDecorate %in_var_SMOOTHING Location 2
               OpDecorate %in_var_BORDERTHICKNESS Location 3
               OpDecorate %in_var_COLOR0 Location 4
               OpDecorate %in_var_COLOR1 Location 5
               OpDecorate %in_var_COLOR2 Location 6
               OpDecorate %out_var_SV_TARGET Location 0
      %float = OpTypeFloat 32
  %float_0_5 = OpConstant %float 0.5
    %float_0 = OpConstant %float 0
    %v4float = OpTypeVector %float 4
         %15 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
    %float_1 = OpConstant %float 1
       %uint = OpTypeInt 32 0
       %bool = OpTypeBool
       %true = OpConstantTrue %bool
%_ptr_Input_v4float = OpTypePointer Input %v4float
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%_ptr_Input_float = OpTypePointer Input %float
%_ptr_Output_v4float = OpTypePointer Output %v4float
       %void = OpTypeVoid
         %26 = OpTypeFunction %void
    %v3float = OpTypeVector %float 3
%in_var_TEXCOORD0 = OpVariable %_ptr_Input_v2float Input
%in_var_RADIUS = OpVariable %_ptr_Input_float Input
%in_var_SMOOTHING = OpVariable %_ptr_Input_float Input
%in_var_BORDERTHICKNESS = OpVariable %_ptr_Input_float Input
%in_var_COLOR0 = OpVariable %_ptr_Input_v4float Input
%in_var_COLOR1 = OpVariable %_ptr_Input_v4float Input
%in_var_COLOR2 = OpVariable %_ptr_Input_v4float Input
%out_var_SV_TARGET = OpVariable %_ptr_Output_v4float Output
     %uint_0 = OpConstant %uint 0
     %PSMain = OpFunction %void None %26
         %29 = OpLabel
         %30 = OpLoad %v2float %in_var_TEXCOORD0
         %31 = OpLoad %float %in_var_RADIUS
         %32 = OpLoad %float %in_var_SMOOTHING
         %33 = OpLoad %float %in_var_BORDERTHICKNESS
         %34 = OpLoad %v4float %in_var_COLOR0
         %35 = OpLoad %v4float %in_var_COLOR1
         %36 = OpLoad %v4float %in_var_COLOR2
               OpSelectionMerge %37 None
               OpSwitch %uint_0 %38
         %38 = OpLabel
         %39 = OpExtInst %float %1 Length %30
         %40 = OpFMul %float %33 %float_0_5
         %41 = OpFMul %float %32 %float_0_5
         %42 = OpFSub %float %31 %40
         %43 = OpFSub %float %42 %41
         %44 = OpFOrdLessThan %bool %39 %43
               OpSelectionMerge %45 None
               OpBranchConditional %44 %46 %47
         %46 = OpLabel
         %48 = OpFDiv %float %39 %31
         %49 = OpCompositeConstruct %v4float %48 %48 %48 %48
         %50 = OpExtInst %v4float %1 FMix %34 %35 %49
               OpBranch %37
         %47 = OpLabel
         %51 = OpFAdd %float %31 %40
         %52 = OpFAdd %float %51 %41
         %53 = OpFOrdGreaterThan %bool %39 %52
               OpSelectionMerge %54 None
               OpBranchConditional %53 %55 %54
         %55 = OpLabel
               OpBranch %37
         %54 = OpLabel
               OpBranch %45
         %45 = OpLabel
         %56 = OpFDiv %float %39 %31
         %57 = OpCompositeConstruct %v4float %56 %56 %56 %56
         %58 = OpExtInst %v4float %1 FMix %34 %35 %57
         %59 = OpFSub %float %31 %41
         %60 = OpFAdd %float %31 %41
         %61 = OpExtInst %float %1 SmoothStep %59 %60 %39
         %62 = OpFSub %float %float_1 %61
         %63 = OpCompositeExtract %float %58 3
         %64 = OpFMul %float %63 %62
         %65 = OpCompositeInsert %v4float %64 %58 3
         %66 = OpFOrdLessThanEqual %bool %33 %float_0
         %67 = OpLogicalNot %bool %66
               OpSelectionMerge %68 None
               OpBranchConditional %67 %69 %68
         %69 = OpLabel
         %70 = OpCompositeExtract %float %36 3
         %71 = OpFOrdLessThanEqual %bool %70 %float_0
               OpBranch %68
         %68 = OpLabel
         %72 = OpPhi %bool %true %45 %71 %69
               OpSelectionMerge %73 None
               OpBranchConditional %72 %74 %73
         %74 = OpLabel
               OpBranch %37
         %73 = OpLabel
         %75 = OpFAdd %float %42 %41
         %76 = OpExtInst %float %1 SmoothStep %43 %75 %39
         %77 = OpFSub %float %51 %41
         %78 = OpExtInst %float %1 SmoothStep %77 %52 %39
         %79 = OpFSub %float %76 %78
         %80 = OpCompositeExtract %float %36 0
         %81 = OpCompositeExtract %float %36 1
         %82 = OpCompositeExtract %float %36 2
         %83 = OpCompositeConstruct %v4float %80 %81 %82 %float_0
         %84 = OpCompositeConstruct %v4float %79 %79 %79 %79
         %85 = OpExtInst %v4float %1 FMix %83 %36 %84
         %86 = OpCompositeExtract %float %85 3
         %87 = OpFSub %float %float_1 %86
         %88 = OpFMul %float %64 %87
         %89 = OpFAdd %float %86 %88
         %90 = OpVectorShuffle %v3float %85 %85 0 1 2
         %91 = OpVectorTimesScalar %v3float %90 %86
         %92 = OpVectorShuffle %v3float %65 %65 0 1 2
         %93 = OpVectorTimesScalar %v3float %92 %64
         %94 = OpVectorTimesScalar %v3float %93 %87
         %95 = OpFAdd %v3float %91 %94
         %96 = OpCompositeConstruct %v3float %89 %89 %89
         %97 = OpFDiv %v3float %95 %96
         %98 = OpCompositeExtract %float %97 0
         %99 = OpCompositeExtract %float %97 1
        %100 = OpCompositeExtract %float %97 2
        %101 = OpCompositeConstruct %v4float %98 %99 %100 %89
               OpBranch %37
         %37 = OpLabel
        %102 = OpPhi %v4float %50 %46 %15 %55 %65 %74 %101 %73
               OpStore %out_var_SV_TARGET %102
               OpReturn
               OpFunctionEnd

#endif

const unsigned char g_PS_InstancedCircle[] = {
  0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64, 0x2e, 0x34, 0x35, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0d, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x50, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x69, 0x6e, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x42, 0x4f, 0x52, 0x44, 0x45,
  0x52, 0x54, 0x48, 0x49, 0x43, 0x4b, 0x4e, 0x45, 0x53, 0x53, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x30, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x08, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x31, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x09, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x32, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x07, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x6f, 0x75, 0x74, 0x2e,
  0x76, 0x61, 0x72, 0x2e, 0x53, 0x56, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45,
  0x54, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x2b, 0x00, 0x04, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f,
  0x15, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x29, 0x00, 0x03, 0x00, 0x12, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfb, 0x00, 0x03, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x26, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x26, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x05, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x2e, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0xf9, 0x00, 0x02, 0x00, 0x25, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0xba, 0x00, 0x05, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x36, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x35, 0x00, 0x00, 0x00,
  0x37, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x37, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x25, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x36, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x27, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x29, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x3f, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x52, 0x00, 0x06, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x04, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x43, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00,
  0x43, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x45, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0xbc, 0x00, 0x05, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0xf9, 0x00, 0x02, 0x00, 0x44, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x44, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00,
  0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x4a, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00,
  0x25, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x49, 0x00, 0x00, 0x00,
  0x81, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00,
  0x27, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x4d, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x4e, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x53, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x4f, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x8e, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00,
  0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x8e, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00,
  0x5e, 0x00, 0x00, 0x00, 0x50, 0x00, 0x06, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x60, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
  0x59, 0x00, 0x00, 0x00, 0x88, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x61, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00,
  0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x07, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00,
  0x62, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00,
  0x59, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x25, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x25, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x0b, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x2e, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,
  0x41, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00,
  0x49, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x66, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00
};

#else

#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float       
; TEXCOORD                 0   xy          1     NONE   float   xy  
; RADIUS                   0     z         1     NONE   float     z 
; SMOOTHING                0      w        1     NONE   float      w
; BORDERTHICKNESS          0   x           2     NONE   float   x   
; COLOR                    0   xyzw        3     NONE   float   xyzw
; COLOR                    1   xyzw        4     NONE   float   xyzw
; COLOR                    2   xyzw        5     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: ad06287d31436988936c988a38ca8d3e
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 8
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 6
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSMain
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; TEXCOORD                 0                 linear       
; RADIUS                   0                 linear       
; SMOOTHING                0                 linear       
; BORDERTHICKNESS          0                 linear       
; COLOR                    0                 linear       
; COLOR                    1                 linear       
; COLOR                    2                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;
;
; ViewId state:
;
; Number of inputs: 24, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 6, 7, 8, 12, 15, 16, 19, 20, 23 }
;   output 1 depends on inputs: { 4, 5, 6, 7, 8, 13, 15, 17, 19, 21, 23 }
;   output 2 depends on inputs: { 4, 5, 6, 7, 8, 14, 15, 18, 19, 22, 23 }
;   output 3 depends on inputs: { 4, 5, 6, 7, 8, 15, 19, 23 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

define void @PSMain() {
  %1 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 7, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 6, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = fmul fast float %16, %16
  %19 = fmul fast float %17, %17
  %20 = fadd fast float %19, %18
  %21 = call float @dx.op.unary.f32(i32 24, float %20)  ; Sqrt(value)
  %22 = fmul fast float %13, 5.000000e-01
  %23 = fmul fast float %14, 5.000000e-01
  %24 = fsub fast float %15, %22
  %25 = fsub fast float %24, %23
  %26 = fcmp fast olt float %21, %25
  br i1 %26, label %27, label %41

; <label>:27                                      ; preds = %0
  %28 = fdiv fast float %21, %15
  %29 = fsub fast float %5, %9
  %30 = fsub fast float %6, %10
  %31 = fsub fast float %7, %11
  %32 = fsub fast float %8, %12
  %33 = fmul fast float %28, %29
  %34 = fmul fast float %28, %30
  %35 = fmul fast float %28, %31
  %36 = fmul fast float %28, %32
  %37 = fadd fast float %33, %9
  %38 = fadd fast float %34, %10
  %39 = fadd fast float %35, %11
  %40 = fadd fast float %36, %12
  br label %108

; <label>:41                                      ; preds = %0
  %42 = fadd fast float %15, %22
  %43 = fadd fast float %42, %23
  %44 = fcmp fast ogt float %21, %43
  br i1 %44, label %108, label %45

; <label>:45                                      ; preds = %41
  %46 = fdiv fast float %21, %15
  %47 = fsub fast float %5, %9
  %48 = fsub fast float %6, %10
  %49 = fsub fast float %7, %11
  %50 = fsub fast float %8, %12
  %51 = fmul fast float %46, %47
  %52 = fmul fast float %46, %48
  %53 = fmul fast float %46, %49
  %54 = fmul fast float %46, %50
  %55 = fadd fast float %51, %9
  %56 = fadd fast float %52, %10
  %57 = fadd fast float %53, %11
  %58 = fadd fast float %54, %12
  %59 = fsub fast float %23, %15
  %60 = fadd fast float %59, %21
  %61 = fdiv fast float %60, %14
  %62 = call float @dx.op.unary.f32(i32 7, float %61)  ; Saturate(value)
  %63 = fmul fast float %62, 2.000000e+00
  %64 = fsub fast float 3.000000e+00, %63
  %65 = fmul fast float %62, %62
  %66 = fmul fast float %65, %64
  %67 = fsub fast float 1.000000e+00, %66
  %68 = fmul fast float %67, %58
  %69 = fcmp fast ole float %13, 0.000000e+00
  %70 = fcmp fast ole float %4, 0.000000e+00
  %71 = or i1 %70, %69
  br i1 %71, label %108, label %72

; <label>:72                                      ; preds = %45
  %73 = fsub fast float %15, %22
  %74 = fadd fast float %73, %23
  %75 = fsub fast float %74, %25
  %76 = fsub fast float %21, %25
  %77 = fdiv fast float %76, %75
  %78 = call float @dx.op.unary.f32(i32 7, float %77)  ; Saturate(value)
  %79 = fmul fast float %78, 2.000000e+00
  %80 = fsub fast float 3.000000e+00, %79
  %81 = fmul fast float %78, %78
  %82 = fmul fast float %81, %80
  %83 = fsub fast float %42, %23
  %84 = fsub fast float %21, %83
  %85 = fdiv fast float %84, %14
  %86 = call float @dx.op.unary.f32(i32 7, float %85)  ; Saturate(value)
  %87 = fmul fast float %86, 2.000000e+00
  %88 = fsub fast float 3.000000e+00, %87
  %89 = fmul fast float %86, %86
  %90 = fmul fast float %89, %88
  %91 = fsub fast float %82, %90
  %92 = fmul fast float %91, %4
  %93 = fsub fast float 1.000000e+00, %92
  %94 = fmul fast float %93, %68
  %95 = fadd fast float %94, %92
  %96 = fmul fast float %92, %1
  %97 = fmul fast float %92, %2
  %98 = fmul fast float %92, %3
  %99 = fmul fast float %94, %55
  %100 = fmul fast float %94, %56
  %101 = fmul fast float %94, %57
  %102 = fadd fast float %99, %96
  %103 = fadd fast float %100, %97
  %104 = fadd fast float %101, %98
  %105 = fdiv fast float %102, %95
  %106 = fdiv fast float %103, %95
  %107 = fdiv fast float %104, %95
  br label %108

; <label>:108                                     ; preds = %72, %45, %41, %27
  %109 = phi float [ %37, %27 ], [ 0.000000e+00, %41 ], [ %105, %72 ], [ %55, %45 ]
  %110 = phi float [ %38, %27 ], [ 0.000000e+00, %41 ], [ %106, %72 ], [ %56, %45 ]
  %111 = phi float [ %39, %27 ], [ 0.000000e+00, %41 ], [ %107, %72 ], [ %57, %45 ]
  %112 = phi float [ %40, %27 ], [ 0.000000e+00, %41 ], [ %95, %72 ], [ %68, %45 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %109)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %110)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %111)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %112)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.viewIdState = !{!4}
!dx.entryPoints = !{!5}

!0 = !{!"dxc(private) 1.8.0.4739 (d9a5e97d0)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 8}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{[26 x i32] [i32 24, i32 4, i32 0, i32 0, i32 0, i32 0, i32 15, i32 15, i32 15, i32 15, i32 15, i32 0, i32 0, i32 0, i32 1, i32 2, i32 4, i32 15, i32 1, i32 2, i32 4, i32 15, i32 1, i32 2, i32 4, i32 15]}
!5 = !{void ()* @PSMain, !"PSMain", !6, null, null}
!6 = !{!7, !22, null}
!7 = !{!8, !10, !12, !14, !15, !16, !18, !20}
!8 = !{i32 0, !"SV_Position", i8 9, i8 3, !9, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!9 = !{i32 0}
!10 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !9, i8 2, i32 1, i8 2, i32 1, i8 0, !11}
!11 = !{i32 3, i32 3}
!12 = !{i32 2, !"RADIUS", i8 9, i8 0, !9, i8 2, i32 1, i8 1, i32 1, i8 2, !13}
!13 = !{i32 3, i32 1}
!14 = !{i32 3, !"SMOOTHING", i8 9, i8 0, !9, i8 2, i32 1, i8 1, i32 1, i8 3, !13}
!15 = !{i32 4, !"BORDERTHICKNESS", i8 9, i8 0, !9, i8 2, i32 1, i8 1, i32 2, i8 0, !13}
!16 = !{i32 5, !"COLOR", i8 9, i8 0, !9, i8 2, i32 1, i8 4, i32 3, i8 0, !17}
!17 = !{i32 3, i32 15}
!18 = !{i32 6, !"COLOR", i8 9, i8 0, !19, i8 2, i32 1, i8 4, i32 4, i8 0, !17}
!19 = !{i32 1}
!20 = !{i32 7, !"COLOR", i8 9, i8 0, !21, i8 2, i32 1, i8 4, i32 5, i8 0, !17}
!21 = !{i32 2}
!22 = !{!23}
!23 = !{i32 0, !"SV_Target", i8 9, i8 16, !9, i8 0, i32 1, i8 4, i32 0, i8 0, !17}

#endif

const unsigned char g_PS_InstancedCircle[] = {
  0x44, 0x58, 0x42, 0x43, 0x5c, 0x38, 0x0b, 0xa3, 0xcc, 0x7f, 0xf0, 0x77,
  0x4d, 0x5d, 0x23, 0xc9, 0x3f, 0xee, 0x85, 0xd3, 0x01, 0x00, 0x00, 0x00,
  0xe4, 0x0b, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x94, 0x01, 0x00, 0x00, 0xd0, 0x01, 0x00, 0x00,
  0x60, 0x03, 0x00, 0x00, 0x7c, 0x03, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x44, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3e, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53, 0x00,
  0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x00, 0x42, 0x4f,
  0x52, 0x44, 0x45, 0x52, 0x54, 0x48, 0x49, 0x43, 0x4b, 0x4e, 0x45, 0x53,
  0x53, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54,
  0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0x88, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x01, 0x00, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x52, 0x41, 0x44, 0x49, 0x55, 0x53,
  0x00, 0x53, 0x4d, 0x4f, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x00, 0x42,
  0x4f, 0x52, 0x44, 0x45, 0x52, 0x54, 0x48, 0x49, 0x43, 0x4b, 0x4e, 0x45,
  0x53, 0x53, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x50, 0x53, 0x4d,
  0x61, 0x69, 0x6e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x61, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x71, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x02, 0x41, 0x00, 0x03, 0x02, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x04, 0x44, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x01, 0x05, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xad, 0x06, 0x28, 0x7d, 0x31, 0x43, 0x69, 0x88, 0x93, 0x6c, 0x98, 0x8a,
  0x38, 0xca, 0x8d, 0x3e, 0x44, 0x58, 0x49, 0x4c, 0x60, 0x08, 0x00, 0x00,
  0x66, 0x00, 0x00, 0x00, 0x18, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x08, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x0f, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x52, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x91, 0x22, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x29, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0x00, 0x00, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x48, 0x09, 0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84,
  0x04, 0x93, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c,
  0x0b, 0x84, 0xa4, 0x4c, 0x10, 0x40, 0x23, 0x00, 0x25, 0x00, 0x14, 0x66,
  0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x20, 0x84, 0x14,
  0x42, 0xa6, 0x18, 0x80, 0x10, 0x52, 0x06, 0xa1, 0x32, 0x0c, 0x32, 0x48,
  0x0d, 0x04, 0xa4, 0x06, 0x99, 0x23, 0x08, 0xa6, 0x00, 0x00, 0x00, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x28,
  0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x05,
  0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x25, 0x50, 0x0c, 0x05, 0x31, 0x02, 0x50, 0x06, 0x45, 0x50, 0x08, 0xa5,
  0x50, 0x1e, 0xe5, 0x40, 0xa5, 0x24, 0xca, 0xa0, 0x10, 0x46, 0x00, 0x8a,
  0xa0, 0x04, 0x0a, 0x84, 0xda, 0x58, 0x1a, 0x46, 0x00, 0x00, 0x00, 0x3c,
  0xcf, 0xf3, 0x3c, 0x00, 0x00, 0x04, 0x02, 0xf1, 0x04, 0x02, 0xf1, 0x04,
  0x02, 0xf1, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x31, 0x20, 0xc3, 0x1b,
  0x43, 0x81, 0x93, 0x4b, 0xb3, 0x0b, 0xa3, 0x2b, 0x4b, 0x01, 0x89, 0x71,
  0xc1, 0x71, 0x81, 0x71, 0xa1, 0xb9, 0x99, 0xc9, 0x01, 0x41, 0x21, 0xcb,
  0x09, 0xab, 0x29, 0xcb, 0xb9, 0x21, 0x83, 0x49, 0xd9, 0x10, 0x04, 0x13,
  0x04, 0x82, 0x98, 0x20, 0x10, 0xc5, 0x06, 0x61, 0x20, 0x26, 0x08, 0x84,
  0xb1, 0x41, 0x18, 0x0c, 0x0a, 0x70, 0x73, 0x1b, 0x06, 0x84, 0x20, 0x26,
  0x08, 0x4d, 0xb5, 0x21, 0x50, 0x26, 0x08, 0x02, 0x40, 0x03, 0x6a, 0xaa,
  0x29, 0x2c, 0xcd, 0x6d, 0x82, 0x40, 0x1c, 0x5c, 0xa6, 0xac, 0xbe, 0xa0,
  0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde, 0xdc, 0x26, 0x08, 0x85, 0x33, 0x41,
  0x28, 0x9e, 0x0d, 0x81, 0x33, 0x41, 0x28, 0xa0, 0x09, 0x42, 0x11, 0x6d,
  0x58, 0x9c, 0x07, 0x8a, 0xa4, 0x69, 0x98, 0x1c, 0x0a, 0x20, 0x42, 0x55,
  0x84, 0x35, 0xf4, 0xf4, 0x24, 0x45, 0x34, 0x41, 0x28, 0xa4, 0x09, 0x02,
  0x81, 0x6c, 0x10, 0x30, 0x6c, 0xc3, 0x32, 0x58, 0x10, 0x25, 0x5d, 0xc3,
  0x35, 0x50, 0xd9, 0x04, 0x81, 0x48, 0x68, 0x48, 0x05, 0x11, 0x25, 0x55,
  0x4d, 0x4d, 0x10, 0x8a, 0x69, 0x83, 0x80, 0x0d, 0x1b, 0x96, 0x8d, 0x83,
  0x28, 0xe9, 0x1a, 0xba, 0xe1, 0xf2, 0x98, 0x4c, 0x35, 0x3d, 0x3d, 0x51,
  0x21, 0x25, 0x39, 0x1d, 0x6d, 0x58, 0x30, 0x30, 0x80, 0x28, 0xe9, 0x1a,
  0xba, 0x21, 0xf2, 0x26, 0x08, 0x84, 0xc2, 0x47, 0xe8, 0x49, 0x8a, 0xa8,
  0x48, 0x8a, 0x0a, 0x29, 0x69, 0x68, 0xc9, 0xa9, 0x68, 0x6a, 0x6a, 0xc3,
  0x22, 0x06, 0x63, 0x00, 0x51, 0xd2, 0x35, 0x74, 0x1b, 0xe5, 0x4d, 0x10,
  0x88, 0x85, 0xc5, 0xd0, 0x13, 0xd3, 0x93, 0xd4, 0x04, 0x81, 0x60, 0x36,
  0x08, 0xd8, 0x19, 0x6c, 0x58, 0xca, 0xc0, 0x0c, 0x20, 0x4a, 0xba, 0x86,
  0x09, 0xa3, 0xd0, 0x60, 0x43, 0x30, 0x6c, 0x58, 0x08, 0x33, 0x80, 0x28,
  0x35, 0xb8, 0x86, 0x49, 0x0c, 0x28, 0x34, 0x98, 0x20, 0x10, 0xcd, 0x86,
  0x60, 0xdb, 0xb0, 0xb0, 0x81, 0x19, 0x40, 0x54, 0x1b, 0x5c, 0xc3, 0x54,
  0x06, 0x14, 0x1a, 0x6c, 0x40, 0x2a, 0xed, 0x0b, 0x03, 0x32, 0x48, 0x83,
  0x35, 0x70, 0x03, 0x26, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65,
  0x74, 0x13, 0x84, 0x82, 0xda, 0xb0, 0x38, 0x70, 0x00, 0xc5, 0x81, 0x44,
  0x0d, 0x93, 0x43, 0xa1, 0xc1, 0x86, 0x40, 0x0e, 0x36, 0x0c, 0x6f, 0x30,
  0x07, 0xc0, 0x86, 0x82, 0x69, 0xe8, 0x00, 0x00, 0xaa, 0xb0, 0xb1, 0xd9,
  0xb5, 0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x82, 0x2a, 0x64,
  0x78, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x02, 0xa2,
  0x09, 0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94, 0xc0,
  0xa8, 0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7, 0xf4,
  0x46, 0x56, 0xc6, 0x36, 0x25, 0x40, 0xea, 0x90, 0xe1, 0xb9, 0xd8, 0xa5,
  0x95, 0xdd, 0x25, 0x91, 0x4d, 0xd1, 0x85, 0xd1, 0x95, 0x4d, 0x09, 0x94,
  0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69,
  0x6e, 0x74, 0x73, 0x53, 0x02, 0x3a, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66,
  0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07,
  0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10,
  0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce,
  0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b,
  0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c,
  0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07,
  0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11,
  0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0,
  0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8,
  0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b,
  0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b,
  0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87,
  0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07,
  0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87,
  0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81,
  0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30,
  0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4,
  0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca,
  0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39,
  0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b,
  0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b,
  0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87,
  0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20,
  0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90,
  0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc,
  0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4,
  0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x06, 0x60, 0xa4, 0xac, 0x09, 0x20, 0x8d, 0x05, 0x4c, 0xc3, 0xe5, 0x3b,
  0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x9b,
  0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d,
  0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0xdb, 0xc0, 0x33, 0x5c, 0xbe, 0xf3, 0xf8,
  0x54, 0x03, 0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xbd, 0x00, 0x00, 0x00, 0x13, 0x04, 0x46, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x44, 0x0a, 0x66, 0x06, 0x80, 0xc6, 0x18, 0x01,
  0x08, 0x82, 0x20, 0x09, 0x06, 0x63, 0x04, 0x20, 0x08, 0x82, 0xf0, 0x37,
  0x46, 0x00, 0x82, 0x20, 0x88, 0x7f, 0x63, 0x04, 0x20, 0x08, 0x82, 0x20,
  0x18, 0x8c, 0x00, 0x00, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x70,
  0x13, 0x64, 0x31, 0xc6, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x1d,
  0x15, 0x5d, 0xcb, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x57,
  0x49, 0x58, 0x83, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1, 0x59,
  0x53, 0x16, 0x25, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0xc1,
  0xc5, 0x69, 0x90, 0x32, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x18,
  0x60, 0xdd, 0xf6, 0x2c, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x88,
  0x41, 0xe6, 0x71, 0x11, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6,
  0x18, 0x68, 0x5f, 0x57, 0x35, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60,
  0x90, 0xc1, 0xa6, 0x79, 0x94, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x46, 0x19, 0x70, 0xdb, 0x37, 0x3d, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0x98, 0x41, 0xc7, 0x81, 0x41, 0x05, 0x8d, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0x71, 0x06, 0x5e, 0x17, 0x06, 0x59, 0x34, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x06, 0x1a, 0x7c, 0x9f, 0x18, 0x60, 0xd2, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x18, 0x69, 0x00, 0x06, 0x62, 0x30, 0x06, 0xd9,
  0x34, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1a, 0x84, 0x81, 0x18,
  0x90, 0x81, 0x46, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xb1, 0x06,
  0x62, 0x80, 0x06, 0x65, 0xb0, 0x55, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xb0, 0xc1, 0x18, 0xa4, 0x81, 0x19, 0x68, 0x96, 0x09, 0x82, 0x7c,
  0x4c, 0x10, 0xe4, 0x63, 0x81, 0x00, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41,
  0x30, 0x50, 0xdc, 0x60, 0x0b, 0x2c, 0xc9, 0xe4, 0x63, 0x89, 0x26, 0x1f,
  0x4b, 0x84, 0xf8, 0x58, 0x20, 0xc4, 0x67, 0x38, 0xa2, 0x08, 0x88, 0x6f,
  0x96, 0x21, 0x10, 0x02, 0x33, 0x18, 0xfa, 0xd8, 0x35, 0xc5, 0xc7, 0xae,
  0x29, 0x3e, 0x76, 0x4d, 0xf1, 0xb1, 0x6b, 0x8a, 0x8f, 0x15, 0x84, 0x7c,
  0xcc, 0x20, 0xe4, 0x63, 0x07, 0x21, 0x1f, 0x43, 0x08, 0xf9, 0x18, 0xb1,
  0xc1, 0xc7, 0x88, 0x0d, 0x3e, 0x46, 0x6c, 0xf0, 0x31, 0x62, 0x83, 0xcf,
  0x2c, 0x41, 0x61, 0x99, 0x04, 0x1f, 0x0b, 0x24, 0xf8, 0x0c, 0x47, 0x54,
  0x81, 0xf0, 0xcd, 0x32, 0x14, 0x43, 0x60, 0x16, 0x47, 0x1f, 0x3b, 0x83,
  0x31, 0x88, 0x8f, 0x9d, 0xc1, 0x18, 0xc4, 0xc7, 0xce, 0x60, 0x0c, 0xe2,
  0x63, 0x67, 0x30, 0x06, 0xf1, 0xb1, 0x82, 0x90, 0x8f, 0x19, 0x84, 0x7c,
  0xec, 0x20, 0xe4, 0x63, 0x08, 0x21, 0x1f, 0x23, 0xd6, 0x00, 0x3e, 0x46,
  0xac, 0x01, 0x7c, 0x8c, 0x58, 0x03, 0xf8, 0x18, 0xb1, 0x06, 0xf0, 0xb1,
  0x30, 0x48, 0x83, 0xf8, 0x58, 0x40, 0x06, 0xf0, 0xb1, 0x80, 0x0d, 0xe8,
  0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x0a, 0x2d, 0xa8, 0x42, 0x60,
  0x41, 0x1f, 0xc8, 0xc7, 0x42, 0x21, 0x88, 0x8f, 0x0d, 0x83, 0x7c, 0x2c,
  0x10, 0xe4, 0x63, 0xa2, 0x10, 0xc4, 0xc7, 0x02, 0x45, 0x3e, 0xc3, 0x11,
  0x75, 0x20, 0x0a, 0xc5, 0x37, 0x1c, 0xf1, 0x07, 0xa3, 0x50, 0x7c, 0x15,
  0x08, 0x3b, 0xcb, 0x50, 0x10, 0x81, 0xd9, 0xc1, 0x1b, 0xc4, 0xc7, 0x82,
  0x37, 0x80, 0x8f, 0x05, 0x6e, 0x10, 0x1f, 0x9b, 0x83, 0x37, 0x88, 0x8f,
  0x05, 0x02, 0x7d, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x40, 0x19, 0x87,
  0x5c, 0x08, 0x2c, 0x60, 0x05, 0xf9, 0x18, 0x2c, 0x04, 0xf1, 0xb1, 0x61,
  0x90, 0x8f, 0x05, 0x82, 0x7c, 0xec, 0x0c, 0xf0, 0x20, 0x3e, 0xb6, 0x07,
  0x41, 0x7c, 0x2c, 0x18, 0x05, 0xfa, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82,
  0x81, 0xb2, 0x0e, 0xe1, 0x10, 0x58, 0x40, 0x0b, 0xf2, 0x31, 0x5c, 0x08,
  0xe2, 0x63, 0xc3, 0x20, 0x1f, 0x0b, 0x04, 0xf9, 0x58, 0x12, 0xc4, 0xc7,
  0x02, 0x5a, 0x90, 0x8f, 0xed, 0x42, 0x10, 0x1f, 0x0b, 0x32, 0xf9, 0x58,
  0x30, 0xc0, 0xc7, 0x88, 0x5d, 0x90, 0x8f, 0x15, 0xbb, 0x20, 0x1f, 0x33,
  0x76, 0x41, 0x3e, 0x56, 0xac, 0x81, 0x7c, 0xcc, 0x58, 0x03, 0xf9, 0xd8,
  0xb1, 0x06, 0xf2, 0xb1, 0xc1, 0x80, 0x8f, 0x0d, 0x06, 0x7c, 0x6c, 0x30,
  0xe0, 0x63, 0x83, 0x42, 0x1f, 0x1b, 0x16, 0xfa, 0xd8, 0xc0, 0xd0, 0x67,
  0x96, 0xa0, 0x18, 0x28, 0x19, 0x50, 0x22, 0x80, 0x0d, 0xc1, 0x20, 0xd0,
  0x61, 0x18, 0x28, 0x19, 0x50, 0x22, 0x90, 0x0d, 0xc1, 0x20, 0xd0, 0x61,
  0x18, 0x28, 0x19, 0x50, 0x22, 0xa0, 0x0d, 0xc1, 0x20, 0xd0, 0x61, 0x18,
  0x28, 0x19, 0x50, 0x22, 0xb0, 0x0d, 0x01, 0x0c, 0x08, 0x5a, 0x18, 0x46,
  0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00, 0x31, 0x89, 0x7e, 0x08, 0x89, 0x90,
  0xb8, 0x07, 0x62, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x10, 0x93, 0xe8,
  0x87, 0x90, 0x08, 0x89, 0x7a, 0x18, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1,
  0x00, 0x31, 0x89, 0x7e, 0x08, 0x89, 0x90, 0xb0, 0x07, 0x61, 0xc4, 0x20,
  0x01, 0x40, 0x10, 0x0c, 0x10, 0x93, 0xe8, 0x87, 0x90, 0x08, 0x89, 0x7c,
  0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#endif
