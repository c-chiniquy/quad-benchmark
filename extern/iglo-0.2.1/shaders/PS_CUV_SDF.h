#ifdef IGLO_VULKAN

#if 0
; SPIR-V
; Version: 1.0
; Generator: Google spiregg; 0
; Bound: 140
; Schema: 0
               OpCapability Shader
               OpCapability RuntimeDescriptorArray
               OpExtension "SPV_EXT_descriptor_indexing"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %PSMain "PSMain" %in_var_COLOR %in_var_TEXCOORD0 %out_var_SV_TARGET
               OpExecutionMode %PSMain OriginUpperLeft
               OpSource HLSL 660
               OpName %type_ConstantBuffer_PushConstants "type.ConstantBuffer.PushConstants"
               OpMemberName %type_ConstantBuffer_PushConstants 0 "textureIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 1 "stencilComponentTextureIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 2 "samplerIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 3 "worldMatrixIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 4 "viewProjMatrixIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 5 "textureConstantsIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 6 "renderConstantsIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 7 "rawOrStructuredBufferIndex"
               OpName %pushConstants "pushConstants"
               OpName %in_var_COLOR "in.var.COLOR"
               OpName %in_var_TEXCOORD0 "in.var.TEXCOORD0"
               OpName %out_var_SV_TARGET "out.var.SV_TARGET"
               OpName %type_ConstantBuffer_TextureConstants "type.ConstantBuffer.TextureConstants"
               OpMemberName %type_ConstantBuffer_TextureConstants 0 "textureSize"
               OpMemberName %type_ConstantBuffer_TextureConstants 1 "inverseTextureSize"
               OpMemberName %type_ConstantBuffer_TextureConstants 2 "msaa"
               OpName %ResourceDescriptorHeap "ResourceDescriptorHeap"
               OpName %type_ConstantBuffer_SDFEffect "type.ConstantBuffer.SDFEffect"
               OpMemberName %type_ConstantBuffer_SDFEffect 0 "outlineColor"
               OpMemberName %type_ConstantBuffer_SDFEffect 1 "glowColor"
               OpMemberName %type_ConstantBuffer_SDFEffect 2 "smoothing"
               OpMemberName %type_ConstantBuffer_SDFEffect 3 "outlineThickness"
               OpMemberName %type_ConstantBuffer_SDFEffect 4 "glowOffset"
               OpMemberName %type_ConstantBuffer_SDFEffect 5 "glowSize"
               OpMemberName %type_ConstantBuffer_SDFEffect 6 "sdfEffectFlags"
               OpName %ResourceDescriptorHeap_0 "ResourceDescriptorHeap"
               OpName %type_2d_image "type.2d.image"
               OpName %ResourceDescriptorHeap_1 "ResourceDescriptorHeap"
               OpName %type_sampler "type.sampler"
               OpName %SamplerDescriptorHeap "SamplerDescriptorHeap"
               OpName %PSMain "PSMain"
               OpName %type_sampled_image "type.sampled.image"
               OpDecorate %in_var_COLOR Location 0
               OpDecorate %in_var_TEXCOORD0 Location 1
               OpDecorate %out_var_SV_TARGET Location 0
               OpDecorate %pushConstants DescriptorSet 0
               OpDecorate %pushConstants Binding 0
               OpDecorate %ResourceDescriptorHeap DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap Binding 1
               OpDecorate %ResourceDescriptorHeap_0 DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap_0 Binding 1
               OpDecorate %ResourceDescriptorHeap_1 DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap_1 Binding 1
               OpDecorate %SamplerDescriptorHeap DescriptorSet 0
               OpDecorate %SamplerDescriptorHeap Binding 2
               OpMemberDecorate %type_ConstantBuffer_PushConstants 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_PushConstants 1 Offset 4
               OpMemberDecorate %type_ConstantBuffer_PushConstants 2 Offset 8
               OpMemberDecorate %type_ConstantBuffer_PushConstants 3 Offset 12
               OpMemberDecorate %type_ConstantBuffer_PushConstants 4 Offset 16
               OpMemberDecorate %type_ConstantBuffer_PushConstants 5 Offset 20
               OpMemberDecorate %type_ConstantBuffer_PushConstants 6 Offset 24
               OpMemberDecorate %type_ConstantBuffer_PushConstants 7 Offset 28
               OpDecorate %type_ConstantBuffer_PushConstants Block
               OpMemberDecorate %type_ConstantBuffer_TextureConstants 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_TextureConstants 1 Offset 8
               OpMemberDecorate %type_ConstantBuffer_TextureConstants 2 Offset 16
               OpDecorate %type_ConstantBuffer_TextureConstants Block
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 1 Offset 16
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 2 Offset 32
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 3 Offset 36
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 4 Offset 40
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 5 Offset 48
               OpMemberDecorate %type_ConstantBuffer_SDFEffect 6 Offset 52
               OpDecorate %type_ConstantBuffer_SDFEffect Block
        %int = OpTypeInt 32 1
      %int_5 = OpConstant %int 5
      %int_6 = OpConstant %int 6
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %float = OpTypeFloat 32
  %float_0_5 = OpConstant %float 0.5
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
     %uint_0 = OpConstant %uint 0
    %float_1 = OpConstant %float 1
     %uint_2 = OpConstant %uint 2
%type_ConstantBuffer_PushConstants = OpTypeStruct %uint %uint %uint %uint %uint %uint %uint %uint
%_ptr_Uniform_type_ConstantBuffer_PushConstants = OpTypePointer Uniform %type_ConstantBuffer_PushConstants
    %v4float = OpTypeVector %float 4
%_ptr_Input_v4float = OpTypePointer Input %v4float
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
%_ptr_Output_v4float = OpTypePointer Output %v4float
%type_ConstantBuffer_TextureConstants = OpTypeStruct %v2float %v2float %uint
%_runtimearr_type_ConstantBuffer_TextureConstants = OpTypeRuntimeArray %type_ConstantBuffer_TextureConstants
%_ptr_Uniform__runtimearr_type_ConstantBuffer_TextureConstants = OpTypePointer Uniform %_runtimearr_type_ConstantBuffer_TextureConstants
%type_ConstantBuffer_SDFEffect = OpTypeStruct %v4float %v4float %float %float %v2float %float %uint
%_runtimearr_type_ConstantBuffer_SDFEffect = OpTypeRuntimeArray %type_ConstantBuffer_SDFEffect
%_ptr_Uniform__runtimearr_type_ConstantBuffer_SDFEffect = OpTypePointer Uniform %_runtimearr_type_ConstantBuffer_SDFEffect
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_runtimearr_type_2d_image = OpTypeRuntimeArray %type_2d_image
%_ptr_UniformConstant__runtimearr_type_2d_image = OpTypePointer UniformConstant %_runtimearr_type_2d_image
%type_sampler = OpTypeSampler
%_runtimearr_type_sampler = OpTypeRuntimeArray %type_sampler
%_ptr_UniformConstant__runtimearr_type_sampler = OpTypePointer UniformConstant %_runtimearr_type_sampler
       %void = OpTypeVoid
         %44 = OpTypeFunction %void
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
%_ptr_Uniform_type_ConstantBuffer_TextureConstants = OpTypePointer Uniform %type_ConstantBuffer_TextureConstants
%_ptr_Uniform_type_ConstantBuffer_SDFEffect = OpTypePointer Uniform %type_ConstantBuffer_SDFEffect
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
%type_sampled_image = OpTypeSampledImage %type_2d_image
       %bool = OpTypeBool
%pushConstants = OpVariable %_ptr_Uniform_type_ConstantBuffer_PushConstants Uniform
%in_var_COLOR = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD0 = OpVariable %_ptr_Input_v2float Input
%out_var_SV_TARGET = OpVariable %_ptr_Output_v4float Output
%ResourceDescriptorHeap = OpVariable %_ptr_Uniform__runtimearr_type_ConstantBuffer_TextureConstants Uniform
%ResourceDescriptorHeap_0 = OpVariable %_ptr_Uniform__runtimearr_type_ConstantBuffer_SDFEffect Uniform
%ResourceDescriptorHeap_1 = OpVariable %_ptr_UniformConstant__runtimearr_type_2d_image UniformConstant
%SamplerDescriptorHeap = OpVariable %_ptr_UniformConstant__runtimearr_type_sampler UniformConstant
%_ptr_Uniform_float = OpTypePointer Uniform %float
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
     %PSMain = OpFunction %void None %44
         %53 = OpLabel
         %54 = OpLoad %v4float %in_var_COLOR
         %55 = OpLoad %v2float %in_var_TEXCOORD0
         %56 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_5
         %57 = OpLoad %uint %56
         %58 = OpAccessChain %_ptr_Uniform_type_ConstantBuffer_TextureConstants %ResourceDescriptorHeap %57
         %59 = OpAccessChain %_ptr_Uniform_float %58 %uint_0 %uint_0
         %60 = OpLoad %float %59
         %61 = OpAccessChain %_ptr_Uniform_float %58 %uint_0 %uint_1
         %62 = OpLoad %float %61
         %63 = OpAccessChain %_ptr_Uniform_v2float %58 %uint_1
         %64 = OpLoad %v2float %63
         %65 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_6
         %66 = OpLoad %uint %65
         %67 = OpAccessChain %_ptr_Uniform_type_ConstantBuffer_SDFEffect %ResourceDescriptorHeap_0 %66
         %68 = OpLoad %type_ConstantBuffer_SDFEffect %67
         %69 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_0
         %70 = OpLoad %uint %69
         %71 = OpAccessChain %_ptr_UniformConstant_type_2d_image %ResourceDescriptorHeap_1 %70
         %72 = OpLoad %type_2d_image %71
         %73 = OpAccessChain %_ptr_Uniform_uint %pushConstants %int_2
         %74 = OpLoad %uint %73
         %75 = OpAccessChain %_ptr_UniformConstant_type_sampler %SamplerDescriptorHeap %74
         %76 = OpLoad %type_sampler %75
         %77 = OpCompositeExtract %float %55 0
         %78 = OpFMul %float %77 %60
         %79 = OpCompositeExtract %float %55 1
         %80 = OpFMul %float %79 %62
         %81 = OpCompositeConstruct %v2float %78 %80
         %82 = OpDPdx %v2float %81
         %83 = OpDPdy %v2float %81
         %84 = OpCompositeExtract %float %68 2
         %85 = OpExtInst %float %1 Distance %82 %83
         %86 = OpFMul %float %84 %85
         %87 = OpSampledImage %type_sampled_image %72 %76
         %88 = OpImageSampleImplicitLod %v4float %87 %55 None
         %89 = OpCompositeExtract %float %88 0
         %90 = OpCompositeExtract %uint %68 6
         %91 = OpBitwiseAnd %uint %90 %uint_1
         %92 = OpINotEqual %bool %91 %uint_0
               OpSelectionMerge %93 None
               OpBranchConditional %92 %94 %95
         %94 = OpLabel
         %96 = OpCompositeExtract %float %68 3
         %97 = OpFSub %float %float_0_5 %96
         %98 = OpFSub %float %97 %86
         %99 = OpFAdd %float %97 %86
        %100 = OpExtInst %float %1 SmoothStep %98 %99 %89
        %101 = OpFSub %float %float_0_5 %86
        %102 = OpFAdd %float %float_0_5 %86
        %103 = OpExtInst %float %1 SmoothStep %101 %102 %89
        %104 = OpCompositeExtract %v4float %68 0
        %105 = OpCompositeConstruct %v4float %103 %103 %103 %103
        %106 = OpExtInst %v4float %1 FMix %104 %54 %105
        %107 = OpVectorTimesScalar %v4float %106 %100
               OpBranch %93
         %95 = OpLabel
        %108 = OpFSub %float %float_0_5 %86
        %109 = OpFAdd %float %float_0_5 %86
        %110 = OpExtInst %float %1 SmoothStep %108 %109 %89
        %111 = OpCompositeConstruct %v4float %float_1 %float_1 %float_1 %110
        %112 = OpFMul %v4float %111 %54
               OpBranch %93
         %93 = OpLabel
        %113 = OpPhi %float %100 %94 %110 %95
        %114 = OpPhi %v4float %107 %94 %112 %95
        %115 = OpPhi %float %97 %94 %float_0_5 %95
        %116 = OpBitwiseAnd %uint %90 %uint_2
        %117 = OpINotEqual %bool %116 %uint_0
               OpSelectionMerge %118 None
               OpBranchConditional %117 %119 %118
        %119 = OpLabel
        %120 = OpCompositeExtract %v2float %68 4
        %121 = OpFMul %v2float %120 %64
        %122 = OpFSub %v2float %55 %121
        %123 = OpSampledImage %type_sampled_image %72 %76
        %124 = OpImageSampleImplicitLod %v4float %123 %122 None
        %125 = OpCompositeExtract %float %124 0
        %126 = OpCompositeExtract %float %68 5
        %127 = OpFSub %float %115 %126
        %128 = OpFAdd %float %115 %126
        %129 = OpExtInst %float %1 SmoothStep %127 %128 %125
        %130 = OpCompositeExtract %v4float %68 1
        %131 = OpCompositeExtract %float %68 1 3
        %132 = OpFMul %float %131 %129
        %133 = OpCompositeExtract %float %130 0
        %134 = OpCompositeExtract %float %130 1
        %135 = OpCompositeExtract %float %130 2
        %136 = OpCompositeConstruct %v4float %133 %134 %135 %132
        %137 = OpCompositeConstruct %v4float %113 %113 %113 %113
        %138 = OpExtInst %v4float %1 FMix %136 %114 %137
               OpBranch %118
        %118 = OpLabel
        %139 = OpPhi %v4float %114 %93 %138 %119
               OpStore %out_var_SV_TARGET %139
               OpReturn
               OpFunctionEnd

#endif

const unsigned char g_PS_CUV_SDF[] = {
  0x03, 0x02, 0x23, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00,
  0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0xb6, 0x14, 0x00, 0x00,
  0x0a, 0x00, 0x08, 0x00, 0x53, 0x50, 0x56, 0x5f, 0x45, 0x58, 0x54, 0x5f,
  0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x69,
  0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x00, 0x0b, 0x00, 0x06, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64,
  0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x53, 0x4d, 0x61,
  0x69, 0x6e, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x10, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x94, 0x02, 0x00, 0x00, 0x05, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e,
  0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68,
  0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x69, 0x6c, 0x43,
  0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x07, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4d, 0x61, 0x74,
  0x72, 0x69, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x08, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x76, 0x69, 0x65, 0x77, 0x50, 0x72, 0x6f, 0x6a, 0x4d, 0x61, 0x74, 0x72,
  0x69, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x06, 0x00, 0x09, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73,
  0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x06, 0x00, 0x09, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x72, 0x65, 0x6e, 0x64,
  0x65, 0x72, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x72, 0x61, 0x77, 0x4f,
  0x72, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x42,
  0x75, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x07, 0x00, 0x00, 0x00, 0x70, 0x75, 0x73, 0x68,
  0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x07, 0x00, 0x04, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x2e, 0x76,
  0x61, 0x72, 0x2e, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x6f, 0x75, 0x74, 0x2e, 0x76, 0x61, 0x72, 0x2e, 0x53, 0x56, 0x5f, 0x54,
  0x41, 0x52, 0x47, 0x45, 0x54, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0c, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
  0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74,
  0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x74,
  0x75, 0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x06, 0x00, 0x08, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x65,
  0x72, 0x73, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x69,
  0x7a, 0x65, 0x00, 0x00, 0x06, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x6d, 0x73, 0x61, 0x61, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x08, 0x00, 0x09, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x6f,
  0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
  0x6f, 0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00, 0x05, 0x00, 0x0a, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
  0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
  0x53, 0x44, 0x46, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x07, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
  0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x67, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x6f,
  0x72, 0x00, 0x00, 0x00, 0x06, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x69, 0x6e,
  0x67, 0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x54,
  0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x67, 0x6c, 0x6f, 0x77, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x00, 0x00,
  0x06, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x67, 0x6c, 0x6f, 0x77, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x07, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x73, 0x64, 0x66, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x46, 0x6c, 0x61,
  0x67, 0x73, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
  0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65,
  0x2e, 0x32, 0x64, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x08, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x6f,
  0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
  0x6f, 0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x44,
  0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65, 0x61,
  0x70, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x50, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x05, 0x00, 0x07, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x73, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x64, 0x2e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x47, 0x00, 0x03, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x16, 0x00, 0x03, 0x00, 0x16, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3f, 0x15, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x2b, 0x00, 0x04, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x0a, 0x00, 0x06, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x03, 0x00, 0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x03, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x26, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x03, 0x00,
  0x27, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x02, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x03, 0x00,
  0x29, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x02, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x21, 0x00, 0x03, 0x00,
  0x2c, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x1f, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x22, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x26, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x28, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x2a, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x36, 0x00, 0x05, 0x00, 0x2b, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x35, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2d, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00,
  0x41, 0x00, 0x06, 0x00, 0x33, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x00, 0x00, 0x41, 0x00, 0x06, 0x00, 0x33, 0x00, 0x00, 0x00,
  0x3d, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x34, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x42, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x42, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x46, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x46, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x4a, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x4a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x4e, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x37, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x50, 0x00, 0x05, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
  0xcf, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x53, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00, 0x85, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x06, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0xc7, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x5b, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
  0xab, 0x00, 0x05, 0x00, 0x32, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00,
  0x5b, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x61, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x83, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x62, 0x00, 0x00, 0x00,
  0x61, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00,
  0x56, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0x62, 0x00, 0x00, 0x00, 0x63, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
  0x83, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x56, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00,
  0x65, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00,
  0x67, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00, 0x67, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x36, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00, 0x5d, 0x00, 0x00, 0x00,
  0xf8, 0x00, 0x02, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x56, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x6d, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x08, 0x00, 0x16, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00,
  0x6d, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x6f, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0xf9, 0x00, 0x02, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00, 0x5d, 0x00, 0x00, 0x00,
  0xf5, 0x00, 0x07, 0x00, 0x16, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00,
  0x64, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x72, 0x00, 0x00, 0x00, 0x6b, 0x00, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00,
  0x70, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00,
  0x5e, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x5f, 0x00, 0x00, 0x00,
  0xc7, 0x00, 0x05, 0x00, 0x18, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xab, 0x00, 0x05, 0x00,
  0x32, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x76, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x75, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x20, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,
  0x79, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x7b, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x57, 0x00, 0x06, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00,
  0x7b, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x7d, 0x00, 0x00, 0x00,
  0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x7f, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00,
  0x81, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x73, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x7d, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x82, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x06, 0x00, 0x16, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0x83, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00,
  0x16, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x51, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x86, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x05, 0x00, 0x16, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00,
  0x82, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x50, 0x00, 0x07, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00,
  0x86, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00,
  0x50, 0x00, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00,
  0x71, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00,
  0x71, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x08, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x8a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x88, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00,
  0xf9, 0x00, 0x02, 0x00, 0x76, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x76, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x8b, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x00, 0x00,
  0x8a, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x03, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00,
  0x38, 0x00, 0x01, 0x00
};

#else

#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;       Sampler descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float       
; COLOR                    0   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 0ac00022f8ccd8887249ebdd7d86e7b8
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 1
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 1
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: PSMain
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [32 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 8, 9 }
;   output 1 depends on inputs: { 5, 8, 9 }
;   output 2 depends on inputs: { 6, 8, 9 }
;   output 3 depends on inputs: { 7, 8, 9 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%pushConstants = type { %struct.PushConstants }
%struct.PushConstants = type { i32, i32, i32, i32, i32, i32, i32, i32 }

define void @PSMain() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 32 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %10 = extractvalue %dx.types.CBufRet.i32 %9, 1
  %11 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %10, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %12 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %11, %dx.types.ResourceProperties { i32 13, i32 20 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %13 = extractvalue %dx.types.CBufRet.i32 %9, 2
  %14 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %13, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %15 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %14, %dx.types.ResourceProperties { i32 13, i32 56 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %16 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %17 = extractvalue %dx.types.CBufRet.i32 %16, 0
  %18 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %17, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %18, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %20 = extractvalue %dx.types.CBufRet.i32 %16, 2
  %21 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %20, i1 true, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %22 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %21, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %23 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %24 = extractvalue %dx.types.CBufRet.f32 %23, 0
  %25 = fmul fast float %24, %3
  %26 = extractvalue %dx.types.CBufRet.f32 %23, 1
  %27 = fmul fast float %26, %4
  %28 = call float @dx.op.unary.f32(i32 83, float %25)  ; DerivCoarseX(value)
  %29 = call float @dx.op.unary.f32(i32 83, float %27)  ; DerivCoarseX(value)
  %30 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %31 = extractvalue %dx.types.CBufRet.f32 %30, 0
  %32 = fmul fast float %31, %3
  %33 = extractvalue %dx.types.CBufRet.f32 %30, 1
  %34 = fmul fast float %33, %4
  %35 = call float @dx.op.unary.f32(i32 84, float %32)  ; DerivCoarseY(value)
  %36 = call float @dx.op.unary.f32(i32 84, float %34)  ; DerivCoarseY(value)
  %37 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %38 = extractvalue %dx.types.CBufRet.f32 %37, 0
  %39 = fsub fast float %28, %35
  %40 = fsub fast float %29, %36
  %41 = fmul fast float %39, %39
  %42 = fmul fast float %40, %40
  %43 = fadd fast float %42, %41
  %44 = call float @dx.op.unary.f32(i32 24, float %43)  ; Sqrt(value)
  %45 = fmul fast float %38, %44
  %46 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %19, %dx.types.Handle %22, float %3, float %4, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %47 = extractvalue %dx.types.ResRet.f32 %46, 0
  %48 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %15, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %49 = extractvalue %dx.types.CBufRet.i32 %48, 1
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = fadd fast float %45, 5.000000e-01
  %53 = fsub fast float 5.000000e-01, %45
  %54 = fsub fast float %52, %53
  %55 = fsub fast float %47, %53
  %56 = fdiv fast float %55, %54
  %57 = call float @dx.op.unary.f32(i32 7, float %56)  ; Saturate(value)
  %58 = fmul fast float %57, 2.000000e+00
  %59 = fsub fast float 3.000000e+00, %58
  %60 = fmul fast float %57, %57
  %61 = fmul fast float %60, %59
  br i1 %51, label %95, label %62

; <label>:62                                      ; preds = %0
  %63 = extractvalue %dx.types.CBufRet.f32 %37, 1
  %64 = fsub fast float 5.000000e-01, %63
  %65 = fmul fast float %45, 2.000000e+00
  %66 = fsub fast float %45, %64
  %67 = fadd fast float %66, %47
  %68 = fdiv fast float %67, %65
  %69 = call float @dx.op.unary.f32(i32 7, float %68)  ; Saturate(value)
  %70 = fmul fast float %69, 2.000000e+00
  %71 = fsub fast float 3.000000e+00, %70
  %72 = fmul fast float %69, %69
  %73 = fmul fast float %72, %71
  %74 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %75 = extractvalue %dx.types.CBufRet.f32 %74, 0
  %76 = extractvalue %dx.types.CBufRet.f32 %74, 1
  %77 = extractvalue %dx.types.CBufRet.f32 %74, 2
  %78 = extractvalue %dx.types.CBufRet.f32 %74, 3
  %79 = fsub fast float %5, %75
  %80 = fsub fast float %6, %76
  %81 = fsub fast float %7, %77
  %82 = fsub fast float %8, %78
  %83 = fmul fast float %79, %61
  %84 = fmul fast float %80, %61
  %85 = fmul fast float %81, %61
  %86 = fmul fast float %82, %61
  %87 = fadd fast float %83, %75
  %88 = fadd fast float %84, %76
  %89 = fadd fast float %85, %77
  %90 = fadd fast float %86, %78
  %91 = fmul fast float %87, %73
  %92 = fmul fast float %88, %73
  %93 = fmul fast float %89, %73
  %94 = fmul fast float %90, %73
  br label %97

; <label>:95                                      ; preds = %0
  %96 = fmul fast float %61, %8
  br label %97

; <label>:97                                      ; preds = %95, %62
  %98 = phi float [ %64, %62 ], [ 5.000000e-01, %95 ]
  %99 = phi float [ %73, %62 ], [ %61, %95 ]
  %100 = phi float [ %91, %62 ], [ %5, %95 ]
  %101 = phi float [ %92, %62 ], [ %6, %95 ]
  %102 = phi float [ %93, %62 ], [ %7, %95 ]
  %103 = phi float [ %94, %62 ], [ %96, %95 ]
  %104 = and i32 %49, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %147, label %106

; <label>:106                                     ; preds = %97
  %107 = extractvalue %dx.types.CBufRet.f32 %37, 2
  %108 = extractvalue %dx.types.CBufRet.f32 %37, 3
  %109 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %12, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %110 = extractvalue %dx.types.CBufRet.f32 %109, 2
  %111 = extractvalue %dx.types.CBufRet.f32 %109, 3
  %112 = fmul fast float %110, %107
  %113 = fmul fast float %111, %108
  %114 = fsub fast float %3, %112
  %115 = fsub fast float %4, %113
  %116 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %19, %dx.types.Handle %22, float %114, float %115, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %117 = extractvalue %dx.types.ResRet.f32 %116, 0
  %118 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %119 = extractvalue %dx.types.CBufRet.f32 %118, 0
  %120 = fmul fast float %119, 2.000000e+00
  %121 = fsub fast float %117, %98
  %122 = fadd fast float %121, %119
  %123 = fdiv fast float %122, %120
  %124 = call float @dx.op.unary.f32(i32 7, float %123)  ; Saturate(value)
  %125 = fmul fast float %124, 2.000000e+00
  %126 = fsub fast float 3.000000e+00, %125
  %127 = fmul fast float %124, %124
  %128 = fmul fast float %127, %126
  %129 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %15, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %130 = extractvalue %dx.types.CBufRet.f32 %129, 0
  %131 = extractvalue %dx.types.CBufRet.f32 %129, 1
  %132 = extractvalue %dx.types.CBufRet.f32 %129, 2
  %133 = extractvalue %dx.types.CBufRet.f32 %129, 3
  %134 = fmul fast float %128, %133
  %135 = fsub fast float %100, %130
  %136 = fsub fast float %101, %131
  %137 = fsub fast float %102, %132
  %138 = fsub fast float %103, %134
  %139 = fmul fast float %135, %99
  %140 = fmul fast float %136, %99
  %141 = fmul fast float %137, %99
  %142 = fmul fast float %138, %99
  %143 = fadd fast float %139, %130
  %144 = fadd fast float %140, %131
  %145 = fadd fast float %141, %132
  %146 = fadd fast float %142, %134
  br label %147

; <label>:147                                     ; preds = %106, %97
  %148 = phi float [ %143, %106 ], [ %100, %97 ]
  %149 = phi float [ %144, %106 ], [ %101, %97 ]
  %150 = phi float [ %145, %106 ], [ %102, %97 ]
  %151 = phi float [ %146, %106 ], [ %103, %97 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %148)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %149)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %150)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %151)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!7}
!dx.entryPoints = !{!8}

!0 = !{!"dxc(private) 1.8.0.4739 (d9a5e97d0)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 8}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{null, null, !5, null}
!5 = !{!6}
!6 = !{i32 0, %pushConstants* undef, !"", i32 0, i32 0, i32 1, i32 32, null}
!7 = !{[12 x i32] [i32 10, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 4, i32 8, i32 15, i32 15]}
!8 = !{void ()* @PSMain, !"PSMain", !9, !4, !19}
!9 = !{!10, !17, null}
!10 = !{!11, !13, !15}
!11 = !{i32 0, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!12 = !{i32 0}
!13 = !{i32 1, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 1, i8 0, !14}
!14 = !{i32 3, i32 15}
!15 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !12, i8 2, i32 1, i8 2, i32 2, i8 0, !16}
!16 = !{i32 3, i32 3}
!17 = !{!18}
!18 = !{i32 0, !"SV_Target", i8 9, i8 16, !12, i8 0, i32 1, i8 4, i32 0, i8 0, !14}
!19 = !{i32 0, i64 3221225472}

#endif

const unsigned char g_PS_CUV_SDF[] = {
  0x44, 0x58, 0x42, 0x43, 0xa3, 0x4f, 0xaf, 0x67, 0xce, 0x03, 0x30, 0x8f,
  0x84, 0xb5, 0x5e, 0xca, 0x30, 0x64, 0xc0, 0xb0, 0x01, 0x00, 0x00, 0x00,
  0x3c, 0x0d, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00,
  0x08, 0x02, 0x00, 0x00, 0x24, 0x02, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x84, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45,
  0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0x34, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54,
  0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xf0, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x01, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x50, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0a, 0xc0, 0x00, 0x22, 0xf8, 0xcc, 0xd8, 0x88,
  0x72, 0x49, 0xeb, 0xdd, 0x7d, 0x86, 0xe7, 0xb8, 0x44, 0x58, 0x49, 0x4c,
  0x10, 0x0b, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0xc4, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0xf8, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0xbb, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x45, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x9c, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0x84, 0x8a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc,
  0x10, 0x68, 0x86, 0x85, 0x40, 0x81, 0x32, 0x47, 0x10, 0x94, 0x62, 0x21,
  0x08, 0x86, 0xa1, 0xe6, 0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f,
  0xdb, 0xa8, 0x62, 0x25, 0x26, 0xbf, 0xb8, 0x6d, 0x44, 0x0c, 0xc3, 0x30,
  0x14, 0xe2, 0x21, 0x16, 0x82, 0xa0, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87,
  0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0x7c, 0xe4, 0xb6, 0x11, 0x41,
  0x10, 0x04, 0x51, 0x08, 0x89, 0x58, 0x08, 0x9a, 0xca, 0x30, 0x10, 0x03,
  0x55, 0x37, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0xad,
  0xc4, 0xe4, 0x17, 0xb7, 0x8d, 0x8a, 0x61, 0x18, 0x06, 0xa2, 0x30, 0x17,
  0xb1, 0x2c, 0xc3, 0x30, 0x0c, 0x04, 0x41, 0x0c, 0x84, 0xdd, 0x36, 0x5c,
  0xfe, 0x84, 0x3d, 0x84, 0xe4, 0xaf, 0x84, 0xe4, 0x50, 0x91, 0x40, 0xa4,
  0x91, 0xf3, 0x10, 0xd1, 0x84, 0x10, 0x12, 0x12, 0x08, 0xa2, 0x10, 0x0b,
  0xb1, 0x68, 0xb4, 0x1d, 0x34, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0xaf,
  0x84, 0xb4, 0x21, 0xcd, 0x80, 0x08, 0x82, 0x20, 0x8a, 0x52, 0x2c, 0x44,
  0x47, 0x30, 0xe4, 0x0d, 0x04, 0x1c, 0x25, 0x4d, 0x11, 0x25, 0x4c, 0x7e,
  0x4a, 0x49, 0x07, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93, 0x84, 0x10, 0x82,
  0x20, 0x08, 0x82, 0x20, 0x88, 0x6b, 0x1e, 0x4a, 0x3a, 0x38, 0xa7, 0x91,
  0x26, 0xa0, 0x99, 0x24, 0x14, 0x84, 0x24, 0x26, 0x03, 0x31, 0x47, 0x00,
  0x0a, 0x53, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x02, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x0f, 0x06, 0x04, 0xc0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x0d, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x0a,
  0x62, 0x04, 0xa0, 0x80, 0xca, 0xa0, 0x3c, 0x8a, 0x80, 0x8a, 0x92, 0x28,
  0x83, 0x42, 0x18, 0x01, 0x28, 0x82, 0x02, 0xa1, 0xb2, 0x00, 0x01, 0x01,
  0x01, 0x31, 0x88, 0x1c, 0x8b, 0x51, 0x08, 0x00, 0x00, 0x80, 0x40, 0x20,
  0x90, 0xe7, 0xa1, 0x71, 0x06, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x5f, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x31, 0x20, 0xc3, 0x1b, 0x43, 0x81, 0x93, 0x4b, 0xb3, 0x0b, 0xa3, 0x2b,
  0x4b, 0x01, 0x89, 0x71, 0xc1, 0x71, 0x81, 0x71, 0xa1, 0xb9, 0x99, 0xc9,
  0x01, 0x41, 0x21, 0xcb, 0x09, 0xab, 0x29, 0xcb, 0xb9, 0x21, 0x83, 0x49,
  0xd9, 0x10, 0x04, 0x13, 0x04, 0x42, 0x99, 0x20, 0x10, 0xcb, 0x06, 0x61,
  0x20, 0x26, 0x08, 0x04, 0xb3, 0x41, 0x18, 0x0c, 0x0a, 0x70, 0x73, 0x1b,
  0x06, 0x84, 0x20, 0x26, 0x08, 0x44, 0x33, 0x41, 0x18, 0x03, 0x8d, 0xc0,
  0x04, 0x81, 0x70, 0x36, 0x20, 0xca, 0xc2, 0x28, 0xca, 0xd0, 0x00, 0x1b,
  0x02, 0x67, 0x03, 0x01, 0x00, 0x0f, 0x30, 0x41, 0x20, 0x83, 0x6c, 0x43,
  0x10, 0x4d, 0x10, 0x04, 0x80, 0x06, 0xd4, 0x54, 0x53, 0x58, 0x9a, 0x1b,
  0x97, 0x29, 0xab, 0x2f, 0xa8, 0xb7, 0xb9, 0x34, 0xba, 0xb4, 0x37, 0xb7,
  0x09, 0x42, 0x21, 0x4d, 0x10, 0x8a, 0x69, 0x43, 0xa0, 0x4c, 0x10, 0x0a,
  0x6a, 0x82, 0x50, 0x54, 0x1b, 0x16, 0xa5, 0xb2, 0x2e, 0x2c, 0x1b, 0x32,
  0x45, 0x03, 0x58, 0x0c, 0x3d, 0x31, 0x3d, 0x49, 0x4d, 0x10, 0x0a, 0x6b,
  0x82, 0x40, 0x3c, 0x13, 0x04, 0x02, 0xda, 0x20, 0x78, 0xdf, 0x86, 0x65,
  0xe0, 0x2c, 0x0d, 0xeb, 0x86, 0x6c, 0xd0, 0xc0, 0x60, 0x82, 0x40, 0x44,
  0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88, 0x36, 0x08, 0x9e,
  0xb7, 0x61, 0x11, 0x83, 0x31, 0xb0, 0x34, 0xac, 0x1b, 0x3a, 0x31, 0xd0,
  0xc8, 0x60, 0xc3, 0xb0, 0x85, 0x41, 0x19, 0x30, 0x99, 0xb2, 0xfa, 0xa2,
  0x0a, 0x93, 0x3b, 0x2b, 0xa3, 0x9b, 0x20, 0x14, 0xd7, 0x86, 0x45, 0x39,
  0x03, 0x0b, 0x0d, 0x30, 0x6d, 0xc8, 0x14, 0x0d, 0x0c, 0x36, 0x04, 0x69,
  0xb0, 0x61, 0x30, 0x03, 0x35, 0x00, 0x26, 0x08, 0x65, 0x80, 0x6d, 0x10,
  0x14, 0x36, 0xd8, 0x50, 0x4c, 0xd4, 0x1a, 0x40, 0x6d, 0x50, 0x85, 0x8d,
  0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x10, 0x54,
  0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12,
  0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6,
  0x04, 0x46, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9,
  0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01, 0x52, 0x86, 0x0c, 0xcf, 0x45,
  0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0xf0, 0xd4,
  0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b,
  0xa3, 0x2b, 0x9b, 0x12, 0x44, 0x75, 0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8,
  0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6, 0xa6, 0x04, 0x6d, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x2d, 0x00, 0x00, 0x00, 0x06, 0x60, 0xa4, 0xac, 0x09, 0x20, 0x8d, 0x21,
  0x50, 0xc3, 0xe5, 0x3b, 0x8f, 0x0f, 0x34, 0x8d, 0x33, 0x01, 0x13, 0x11,
  0x02, 0xcd, 0xb0, 0x10, 0x46, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6,
  0x17, 0xb7, 0x6d, 0x05, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55,
  0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72,
  0xdb, 0x96, 0xd0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44,
  0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0xcc, 0x86, 0x34, 0x03, 0xd2,
  0x18, 0x36, 0xa0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44,
  0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0x4c, 0x48, 0x00, 0x8f, 0x05,
  0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35,
  0xf9, 0xc5, 0x6d, 0xdb, 0x01, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x12, 0xc0,
  0x3c, 0x0b, 0xe1, 0x17, 0xb7, 0x6d, 0x02, 0xd5, 0x70, 0xf9, 0xce, 0xe3,
  0x4b, 0x93, 0x13, 0x11, 0x28, 0x35, 0x3d, 0xd4, 0xe4, 0x17, 0xb7, 0x6d,
  0x06, 0xcf, 0x70, 0xf9, 0xce, 0xe3, 0x53, 0x0d, 0x10, 0x61, 0x7e, 0x71,
  0xdb, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x14, 0x01, 0x00, 0x00,
  0x13, 0x04, 0x46, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0xc4, 0xd4, 0xc0, 0x08, 0x00, 0x15, 0x25, 0x40, 0x44, 0xc1, 0x94, 0xdd,
  0x0c, 0x40, 0x21, 0x14, 0xec, 0x40, 0xd1, 0x0e, 0x94, 0x42, 0x69, 0x94,
  0x43, 0x99, 0x06, 0x14, 0x6a, 0x40, 0xe1, 0x95, 0xec, 0x40, 0xa1, 0x14,
  0x5c, 0x49, 0x42, 0x14, 0x07, 0x0d, 0x63, 0x04, 0x20, 0x08, 0x82, 0x24,
  0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0xc2, 0xdf, 0x18, 0x01, 0x08, 0x82,
  0x20, 0x08, 0x06, 0x33, 0x00, 0xa4, 0xcd, 0x21, 0x94, 0x81, 0x33, 0x87,
  0x50, 0x06, 0x6b, 0x30, 0x87, 0x50, 0x06, 0x6c, 0x30, 0x87, 0x10, 0xb5,
  0xc1, 0x1c, 0x82, 0x1b, 0x34, 0xd4, 0xcd, 0x41, 0x34, 0x4d, 0x63, 0x01,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xe0, 0xc1, 0xc1, 0x13, 0xb0, 0x41,
  0x37, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x9b, 0x1c, 0x60, 0xc1, 0x31,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x1e, 0x68, 0x6a, 0xe0, 0x06,
  0x66, 0xb0, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xb1, 0x07, 0xdb,
  0x1a, 0xbc, 0xc1, 0xc7, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xc1,
  0x07, 0xdc, 0x1c, 0xc0, 0x01, 0x1a, 0x74, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xf4, 0x41, 0x47, 0x07, 0x71, 0x10, 0x06, 0xde, 0x88, 0x41,
  0x02, 0x80, 0x20, 0x18, 0x18, 0x7e, 0xe0, 0xd5, 0x81, 0x1c, 0xa4, 0xc1,
  0x37, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1f, 0x7c, 0x76, 0x30,
  0x07, 0x6d, 0x00, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0xf1,
  0x81, 0x18, 0x1c, 0x77, 0x30, 0x9a, 0x10, 0x04, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xd0, 0x80, 0x02, 0x18, 0x04, 0x67, 0x70, 0x06, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0xb0, 0xf1, 0x81, 0x18, 0x04, 0xd0, 0x68, 0x02,
  0x21, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x33, 0x0a, 0x63, 0x10,
  0xa8, 0x81, 0x1a, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0xf6, 0x07,
  0x65, 0x10, 0x48, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0x8d, 0x42,
  0x1a, 0x38, 0x7b, 0x30, 0x9a, 0x10, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0xd0, 0x9c, 0xc2, 0x19, 0x04, 0x6e, 0xe0, 0x06, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0xb0, 0x8d, 0x42, 0x1a, 0x04, 0xd5, 0x68, 0x02, 0x21,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0xa3, 0x0a, 0x6a, 0x10, 0xc8,
  0x41, 0x1c, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x66, 0x0a, 0x6c,
  0x10, 0x5c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x00, 0xad, 0x02, 0x1c,
  0x2c, 0xa2, 0x30, 0x9a, 0x10, 0x00, 0x16, 0x58, 0xf2, 0x19, 0x4d, 0x18,
  0x02, 0x0b, 0x2e, 0xf9, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xe5,
  0x0a, 0x6d, 0x30, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0xf5, 0x0a,
  0x6e, 0x20, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x24, 0x0b, 0x77,
  0x20, 0xa5, 0xc2, 0x68, 0x42, 0x00, 0x58, 0xd0, 0xc9, 0x67, 0x34, 0x61,
  0x08, 0x2c, 0xf0, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x55,
  0x2d, 0xcc, 0xc1, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x95, 0x2d,
  0xd0, 0x81, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x50, 0x2e, 0xf8,
  0x81, 0xc5, 0x0a, 0xa3, 0x09, 0x01, 0x60, 0x0b, 0x11, 0x1f, 0x5b, 0x88,
  0xf8, 0x98, 0x20, 0xc8, 0xc7, 0x04, 0x41, 0x3e, 0x16, 0x08, 0xf0, 0x19,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0xca, 0x17, 0x4c, 0x21, 0xb0, 0x23,
  0x90, 0xcf, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18, 0x60, 0xbf, 0xd0, 0x07,
  0x1b, 0xb6, 0x06, 0x6a, 0x40, 0x07, 0x74, 0x90, 0x0b, 0xb9, 0x60, 0x0a,
  0x74, 0x30, 0x9a, 0x10, 0x00, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30,
  0x8d, 0x43, 0x2a, 0x84, 0x41, 0x2e, 0x8c, 0x26, 0x04, 0x41, 0x05, 0xe0,
  0xa0, 0xc3, 0x0d, 0x81, 0x2f, 0x80, 0x81, 0x1d, 0x7c, 0x00, 0x1f, 0xeb,
  0x03, 0x24, 0x3e, 0x26, 0x04, 0xf1, 0x31, 0x44, 0x88, 0x8f, 0x05, 0x02,
  0x7d, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x5a, 0x87, 0x55, 0x08,
  0x2c, 0x08, 0x05, 0xf9, 0x18, 0x29, 0x04, 0xf1, 0xb1, 0x61, 0x90, 0x8f,
  0x05, 0x82, 0x7c, 0x66, 0x19, 0x84, 0x60, 0x19, 0x4d, 0xc8, 0x02, 0x3b,
  0x85, 0x20, 0x3e, 0x36, 0x9d, 0x82, 0x7c, 0x8c, 0x12, 0xe2, 0x63, 0xc1,
  0x04, 0x1f, 0x0b, 0x06, 0xfa, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41,
  0x65, 0x0f, 0xb6, 0x10, 0x58, 0xc0, 0x0a, 0xf2, 0xb1, 0x57, 0x08, 0xe2,
  0x63, 0xc3, 0x20, 0x1f, 0x0b, 0x04, 0xf9, 0x8c, 0x18, 0x1c, 0x00, 0x08,
  0x82, 0x01, 0xd4, 0x0f, 0xe2, 0xa0, 0x07, 0xf4, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x60, 0xa9,
  0x40, 0xc4, 0xc7, 0x52, 0x81, 0x88, 0x8f, 0xa5, 0x02, 0x11, 0x1f, 0x4b,
  0x05, 0x22, 0x3e, 0x46, 0x54, 0xf2, 0x31, 0xc2, 0x92, 0x8f, 0x11, 0x97,
  0x7c, 0x8c, 0xc0, 0xe4, 0x63, 0x04, 0x03, 0x1f, 0x23, 0x18, 0xf8, 0x18,
  0xc1, 0xc0, 0xc7, 0x08, 0x06, 0x3e, 0x46, 0x48, 0xf2, 0x31, 0x62, 0x92,
  0x8f, 0x11, 0x94, 0x7c, 0x8c, 0xa8, 0xe4, 0x33, 0x4b, 0x30, 0x58, 0x18,
  0xd8, 0x82, 0x7c, 0x66, 0x09, 0x86, 0x81, 0x8a, 0x01, 0x14, 0x02, 0xd7,
  0x10, 0x06, 0x2a, 0x06, 0x38, 0x08, 0x4c, 0x41, 0x18, 0xa8, 0x18, 0x9c,
  0x00, 0x2f, 0x84, 0x81, 0x8a, 0xc1, 0x09, 0xf0, 0x42, 0x18, 0xa8, 0x18,
  0x9c, 0x00, 0x2f, 0x84, 0x81, 0x8a, 0xc1, 0x09, 0x18, 0xa1, 0xe8, 0x80,
  0x25, 0x74, 0xb8, 0x21, 0x88, 0x09, 0x30, 0x98, 0x65, 0x28, 0x88, 0x60,
  0x34, 0x41, 0x14, 0x84, 0xd1, 0x84, 0x51, 0x18, 0x46, 0x0c, 0x0e, 0x00,
  0x04, 0xc1, 0x00, 0xea, 0x09, 0x91, 0xe8, 0x05, 0x9a, 0x18, 0x4d, 0x08,
  0x84, 0xd1, 0x04, 0x61, 0x30, 0xa1, 0x90, 0x8f, 0x09, 0x85, 0x7c, 0x6c,
  0x1d, 0x84, 0xf8, 0xd8, 0x3a, 0x08, 0xf1, 0x19, 0x31, 0x78, 0x00, 0x10,
  0x04, 0x03, 0x2c, 0x2c, 0xfe, 0xa1, 0x17, 0x74, 0x41, 0x08, 0xec, 0xc1,
  0x1e, 0x76, 0x62, 0x27, 0x50, 0xc2, 0x1e, 0x46, 0x13, 0x02, 0x60, 0xc4,
  0xe0, 0x00, 0x40, 0x10, 0x0c, 0x20, 0xb3, 0x58, 0x89, 0x71, 0xd8, 0x89,
  0xd1, 0x84, 0x00, 0xb0, 0x60, 0x1f, 0xe4, 0x63, 0x84, 0x15, 0x1f, 0x0b,
  0x06, 0xf8, 0x58, 0x30, 0xd0, 0x67, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c,
  0x2a, 0xb5, 0x50, 0x89, 0xc0, 0x02, 0x90, 0x90, 0x8f, 0x8d, 0x44, 0x10,
  0x1f, 0x1b, 0x06, 0xf9, 0x58, 0x20, 0xc8, 0x67, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0xa0, 0xb8, 0xb0, 0x09, 0x77, 0x58, 0x8b, 0xd1, 0x84, 0x00,
  0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x4d, 0x20, 0x06, 0x33,
  0x02, 0xf9, 0x98, 0x18, 0x14, 0xf1, 0x31, 0x31, 0x28, 0xe2, 0x63, 0x62,
  0x50, 0xc4, 0xc7, 0xc4, 0x80, 0x88, 0x8f, 0x11, 0x67, 0x20, 0x1f, 0x23,
  0xd0, 0x40, 0x3e, 0x46, 0xa4, 0x81, 0x7c, 0x8c, 0x50, 0x03, 0xf9, 0x18,
  0xd1, 0xc0, 0xc7, 0x88, 0x06, 0x3e, 0x46, 0x34, 0xf0, 0x31, 0x82, 0x81,
  0xcf, 0x2c, 0x41, 0x31, 0x50, 0x31, 0x20, 0x04, 0x2f, 0x0c, 0x03, 0x15,
  0x03, 0x42, 0xf0, 0xc2, 0x30, 0x50, 0x31, 0x20, 0x04, 0x2f, 0x0c, 0x03,
  0x15, 0x03, 0x42, 0xf0, 0xc2, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06,
  0x48, 0x6a, 0x9c, 0x85, 0x5f, 0xf8, 0x85, 0x5d, 0x10, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x80, 0xa4, 0xc6, 0x59, 0xf8, 0x85, 0x5f, 0xb8, 0xc5,
  0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x6a, 0x9c, 0x85, 0x5f,
  0xf8, 0x45, 0x5d, 0x08, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xa4,
  0xc6, 0x59, 0xf8, 0x85, 0x5f, 0xe0, 0x45, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00
};

#endif
