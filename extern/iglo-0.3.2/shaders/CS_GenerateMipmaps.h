#ifdef IGLO_VULKAN

#if 0
; SPIR-V
; Version: 1.6
; Generator: Google spiregg; 0
; Bound: 92
; Schema: 0
               OpCapability Shader
               OpCapability RuntimeDescriptorArray
               OpExtension "SPV_EXT_descriptor_indexing"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %CSMain "CSMain" %gl_GlobalInvocationID %pushConstants %ResourceDescriptorHeap %ResourceDescriptorHeap_0 %SamplerDescriptorHeap
               OpExecutionMode %CSMain LocalSize 8 8 1
               OpSource HLSL 660
               OpName %type_ConstantBuffer_PushConstants "type.ConstantBuffer.PushConstants"
               OpMemberName %type_ConstantBuffer_PushConstants 0 "srcTextureIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 1 "destTextureIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 2 "bilinearClampSamplerIndex"
               OpMemberName %type_ConstantBuffer_PushConstants 3 "is_sRGB"
               OpMemberName %type_ConstantBuffer_PushConstants 4 "inverseDestTextureSize"
               OpName %pushConstants "pushConstants"
               OpName %type_2d_image "type.2d.image"
               OpName %ResourceDescriptorHeap "ResourceDescriptorHeap"
               OpName %type_2d_image_0 "type.2d.image"
               OpName %ResourceDescriptorHeap_0 "ResourceDescriptorHeap"
               OpName %type_sampler "type.sampler"
               OpName %SamplerDescriptorHeap "SamplerDescriptorHeap"
               OpName %CSMain "CSMain"
               OpName %type_sampled_image "type.sampled.image"
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %ResourceDescriptorHeap DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap Binding 0
               OpDecorate %ResourceDescriptorHeap_0 DescriptorSet 0
               OpDecorate %ResourceDescriptorHeap_0 Binding 0
               OpDecorate %SamplerDescriptorHeap DescriptorSet 0
               OpDecorate %SamplerDescriptorHeap Binding 1
               OpMemberDecorate %type_ConstantBuffer_PushConstants 0 Offset 0
               OpMemberDecorate %type_ConstantBuffer_PushConstants 1 Offset 4
               OpMemberDecorate %type_ConstantBuffer_PushConstants 2 Offset 8
               OpMemberDecorate %type_ConstantBuffer_PushConstants 3 Offset 12
               OpMemberDecorate %type_ConstantBuffer_PushConstants 4 Offset 16
               OpDecorate %type_ConstantBuffer_PushConstants Block
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
      %float = OpTypeFloat 32
  %float_0_5 = OpConstant %float 0.5
    %v2float = OpTypeVector %float 2
         %20 = OpConstantComposite %v2float %float_0_5 %float_0_5
      %int_4 = OpConstant %int 4
    %float_0 = OpConstant %float 0
      %int_3 = OpConstant %int 3
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%float_0_00313080009 = OpConstant %float 0.00313080009
    %v3float = OpTypeVector %float 3
         %28 = OpConstantComposite %v3float %float_0_00313080009 %float_0_00313080009 %float_0_00313080009
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
         %31 = OpConstantComposite %v3float %float_0_416666657 %float_0_416666657 %float_0_416666657
%float_1_05499995 = OpConstant %float 1.05499995
%float_0_0549999997 = OpConstant %float 0.0549999997
         %34 = OpConstantComposite %v3float %float_0_0549999997 %float_0_0549999997 %float_0_0549999997
%type_ConstantBuffer_PushConstants = OpTypeStruct %uint %uint %uint %uint %v2float
%_ptr_PushConstant_type_ConstantBuffer_PushConstants = OpTypePointer PushConstant %type_ConstantBuffer_PushConstants
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_runtimearr_type_2d_image = OpTypeRuntimeArray %type_2d_image
%_ptr_UniformConstant__runtimearr_type_2d_image = OpTypePointer UniformConstant %_runtimearr_type_2d_image
%type_2d_image_0 = OpTypeImage %float 2D 2 0 0 2 Rgba32f
%_runtimearr_type_2d_image_0 = OpTypeRuntimeArray %type_2d_image_0
%_ptr_UniformConstant__runtimearr_type_2d_image_0 = OpTypePointer UniformConstant %_runtimearr_type_2d_image_0
%type_sampler = OpTypeSampler
%_runtimearr_type_sampler = OpTypeRuntimeArray %type_sampler
%_ptr_UniformConstant__runtimearr_type_sampler = OpTypePointer UniformConstant %_runtimearr_type_sampler
       %void = OpTypeVoid
         %45 = OpTypeFunction %void
    %v4float = OpTypeVector %float 4
%_ptr_PushConstant_uint = OpTypePointer PushConstant %uint
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%_ptr_UniformConstant_type_2d_image_0 = OpTypePointer UniformConstant %type_2d_image_0
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
     %v2uint = OpTypeVector %uint 2
%_ptr_PushConstant_v2float = OpTypePointer PushConstant %v2float
%type_sampled_image = OpTypeSampledImage %type_2d_image
       %bool = OpTypeBool
     %v3bool = OpTypeVector %bool 3
%pushConstants = OpVariable %_ptr_PushConstant_type_ConstantBuffer_PushConstants PushConstant
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
%ResourceDescriptorHeap = OpVariable %_ptr_UniformConstant__runtimearr_type_2d_image UniformConstant
%ResourceDescriptorHeap_0 = OpVariable %_ptr_UniformConstant__runtimearr_type_2d_image_0 UniformConstant
%SamplerDescriptorHeap = OpVariable %_ptr_UniformConstant__runtimearr_type_sampler UniformConstant
     %CSMain = OpFunction %void None %45
         %55 = OpLabel
         %56 = OpLoad %v3uint %gl_GlobalInvocationID
         %57 = OpAccessChain %_ptr_PushConstant_uint %pushConstants %int_0
         %58 = OpLoad %uint %57
         %59 = OpAccessChain %_ptr_UniformConstant_type_2d_image %ResourceDescriptorHeap %58
         %60 = OpLoad %type_2d_image %59
         %61 = OpAccessChain %_ptr_PushConstant_uint %pushConstants %int_1
         %62 = OpLoad %uint %61
         %63 = OpAccessChain %_ptr_UniformConstant_type_2d_image_0 %ResourceDescriptorHeap_0 %62
         %64 = OpLoad %type_2d_image_0 %63
         %65 = OpAccessChain %_ptr_PushConstant_uint %pushConstants %int_2
         %66 = OpLoad %uint %65
         %67 = OpAccessChain %_ptr_UniformConstant_type_sampler %SamplerDescriptorHeap %66
         %68 = OpLoad %type_sampler %67
         %69 = OpVectorShuffle %v2uint %56 %56 0 1
         %70 = OpConvertUToF %v2float %69
         %71 = OpFAdd %v2float %70 %20
         %72 = OpAccessChain %_ptr_PushConstant_v2float %pushConstants %int_4
         %73 = OpLoad %v2float %72
         %74 = OpFMul %v2float %71 %73
         %75 = OpSampledImage %type_sampled_image %60 %68
         %76 = OpImageSampleExplicitLod %v4float %75 %74 Lod %float_0
         %77 = OpAccessChain %_ptr_PushConstant_uint %pushConstants %int_3
         %78 = OpLoad %uint %77
         %79 = OpINotEqual %bool %78 %uint_0
               OpSelectionMerge %80 None
               OpBranchConditional %79 %81 %80
         %81 = OpLabel
         %82 = OpVectorShuffle %v3float %76 %76 0 1 2
         %83 = OpFOrdLessThan %v3bool %82 %28
         %84 = OpVectorTimesScalar %v3float %82 %float_12_9200001
         %85 = OpExtInst %v3float %1 FAbs %82
         %86 = OpExtInst %v3float %1 Pow %85 %31
         %87 = OpVectorTimesScalar %v3float %86 %float_1_05499995
         %88 = OpFSub %v3float %87 %34
         %89 = OpSelect %v3float %83 %84 %88
         %90 = OpVectorShuffle %v4float %76 %89 4 5 6 3
               OpBranch %80
         %80 = OpLabel
         %91 = OpPhi %v4float %76 %55 %90 %81
               OpImageWrite %64 %69 %91 None
               OpReturn
               OpFunctionEnd

#endif

const unsigned char g_CS_GenerateMipmaps[] = {
  0x03, 0x02, 0x23, 0x07, 0x00, 0x06, 0x01, 0x00, 0x00, 0x00, 0x0e, 0x00,
  0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x11, 0x00, 0x02, 0x00, 0xb6, 0x14, 0x00, 0x00,
  0x0a, 0x00, 0x08, 0x00, 0x53, 0x50, 0x56, 0x5f, 0x45, 0x58, 0x54, 0x5f,
  0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x69,
  0x6e, 0x64, 0x65, 0x78, 0x69, 0x6e, 0x67, 0x00, 0x0b, 0x00, 0x06, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x47, 0x4c, 0x53, 0x4c, 0x2e, 0x73, 0x74, 0x64,
  0x2e, 0x34, 0x35, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x0a, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x43, 0x53, 0x4d, 0x61,
  0x69, 0x6e, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x03, 0x00, 0x05, 0x00, 0x00, 0x00, 0x94, 0x02, 0x00, 0x00,
  0x05, 0x00, 0x0b, 0x00, 0x08, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65,
  0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x75, 0x66,
  0x66, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x73,
  0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x72, 0x63, 0x54,
  0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00,
  0x06, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x64, 0x65, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49,
  0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0a, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x62, 0x69, 0x6c, 0x69,
  0x6e, 0x65, 0x61, 0x72, 0x43, 0x6c, 0x61, 0x6d, 0x70, 0x53, 0x61, 0x6d,
  0x70, 0x6c, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x69, 0x73, 0x5f, 0x73, 0x52, 0x47, 0x42, 0x00, 0x06, 0x00, 0x09, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x69, 0x6e, 0x76, 0x65,
  0x72, 0x73, 0x65, 0x44, 0x65, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x75,
  0x72, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x70, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x73,
  0x74, 0x61, 0x6e, 0x74, 0x73, 0x00, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x32, 0x64, 0x2e,
  0x69, 0x6d, 0x61, 0x67, 0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
  0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65,
  0x61, 0x70, 0x00, 0x00, 0x05, 0x00, 0x06, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x74, 0x79, 0x70, 0x65, 0x2e, 0x32, 0x64, 0x2e, 0x69, 0x6d, 0x61, 0x67,
  0x65, 0x00, 0x00, 0x00, 0x05, 0x00, 0x08, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63,
  0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00,
  0x05, 0x00, 0x06, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65,
  0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x00, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x08, 0x00, 0x07, 0x00, 0x00, 0x00, 0x53, 0x61, 0x6d, 0x70,
  0x6c, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
  0x72, 0x48, 0x65, 0x61, 0x70, 0x00, 0x00, 0x00, 0x05, 0x00, 0x04, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x43, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00,
  0x05, 0x00, 0x07, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x74, 0x79, 0x70, 0x65,
  0x2e, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x2e, 0x69, 0x6d, 0x61,
  0x67, 0x65, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x0b, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 0x04, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x48, 0x00, 0x05, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x03, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x17, 0x00, 0x04, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x15, 0x00, 0x04, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x1c, 0x2e, 0x4d, 0x3b, 0x17, 0x00, 0x04, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x2c, 0x00, 0x06, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x52, 0xb8, 0x4e, 0x41, 0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x55, 0x55, 0xd5, 0x3e, 0x2c, 0x00, 0x06, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x1e, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x04, 0x00,
  0x11, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x3d, 0x0a, 0x87, 0x3f,
  0x2b, 0x00, 0x04, 0x00, 0x11, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0xae, 0x47, 0x61, 0x3d, 0x2c, 0x00, 0x06, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x22, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x07, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x23, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x25, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x19, 0x00, 0x09, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x03, 0x00,
  0x26, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x03, 0x00, 0x28, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x02, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x2a, 0x00, 0x00, 0x00, 0x13, 0x00, 0x02, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x21, 0x00, 0x03, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x04, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x2f, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x20, 0x00, 0x04, 0x00, 0x32, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x17, 0x00, 0x04, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x04, 0x00, 0x34, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x03, 0x00, 0x0c, 0x00, 0x00, 0x00,
  0x09, 0x00, 0x00, 0x00, 0x14, 0x00, 0x02, 0x00, 0x35, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x04, 0x00, 0x36, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x23, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x25, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x3b, 0x00, 0x04, 0x00, 0x27, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x04, 0x00,
  0x2b, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x36, 0x00, 0x05, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x37, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x24, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x3a, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x09, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x31, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x3e, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x42, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x32, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x42, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x0b, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x07, 0x00,
  0x33, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x70, 0x00, 0x04, 0x00, 0x13, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,
  0x45, 0x00, 0x00, 0x00, 0x81, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,
  0x41, 0x00, 0x05, 0x00, 0x34, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00,
  0x85, 0x00, 0x05, 0x00, 0x13, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00,
  0x47, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x56, 0x00, 0x05, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x44, 0x00, 0x00, 0x00, 0x58, 0x00, 0x07, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x41, 0x00, 0x05, 0x00,
  0x2f, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x17, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x04, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x4e, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0xab, 0x00, 0x05, 0x00,
  0x35, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0xf7, 0x00, 0x03, 0x00, 0x50, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfa, 0x00, 0x04, 0x00, 0x4f, 0x00, 0x00, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x51, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x08, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0xb8, 0x00, 0x05, 0x00, 0x36, 0x00, 0x00, 0x00, 0x53, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,
  0x1d, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x52, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x07, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x56, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x55, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x8e, 0x00, 0x05, 0x00,
  0x1b, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x83, 0x00, 0x05, 0x00, 0x1b, 0x00, 0x00, 0x00,
  0x58, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00,
  0xa9, 0x00, 0x06, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00,
  0x53, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00,
  0x4f, 0x00, 0x09, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x59, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0xf9, 0x00, 0x02, 0x00, 0x50, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x02, 0x00,
  0x50, 0x00, 0x00, 0x00, 0xf5, 0x00, 0x07, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x5b, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00,
  0x5a, 0x00, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x63, 0x00, 0x05, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x01, 0x00, 0x38, 0x00, 0x01, 0x00
};

#else

#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;       Sampler descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader hash: 7e12e1ee612b6fb6cab14b8432ad575f
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Compute Shader
; NumThreads=(8,8,1)
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 0
; SigOutputElements: 0
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 0
; SigOutputVectors[0]: 0
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: CSMain
;
;
; Buffer Definitions:
;
; cbuffer 
; {
;
;   [24 x i8] (type annotation not present)
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
;                                   cbuffer      NA          NA     CB0            cb0     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%pushConstants = type { %struct.PushConstants }
%struct.PushConstants = type { i32, i32, i32, i32, <2 x float> }

define void @CSMain() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call i32 @dx.op.threadId.i32(i32 93, i32 0)  ; ThreadId(component)
  %4 = call i32 @dx.op.threadId.i32(i32 93, i32 1)  ; ThreadId(component)
  %5 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %6 = extractvalue %dx.types.CBufRet.i32 %5, 0
  %7 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %6, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %8 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %7, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %9 = extractvalue %dx.types.CBufRet.i32 %5, 1
  %10 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %9, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %11 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %10, %dx.types.ResourceProperties { i32 4098, i32 1033 })  ; AnnotateHandle(res,props)  resource: RWTexture2D<4xF32>
  %12 = extractvalue %dx.types.CBufRet.i32 %5, 2
  %13 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %12, i1 true, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %14 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %13, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %15 = uitofp i32 %3 to float
  %16 = uitofp i32 %4 to float
  %17 = fadd fast float %15, 5.000000e-01
  %18 = fadd fast float %16, 5.000000e-01
  %19 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %20 = extractvalue %dx.types.CBufRet.f32 %19, 0
  %21 = extractvalue %dx.types.CBufRet.f32 %19, 1
  %22 = fmul fast float %20, %17
  %23 = fmul fast float %21, %18
  %24 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %8, %dx.types.Handle %14, float %22, float %23, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %25 = extractvalue %dx.types.ResRet.f32 %24, 0
  %26 = extractvalue %dx.types.ResRet.f32 %24, 1
  %27 = extractvalue %dx.types.ResRet.f32 %24, 2
  %28 = extractvalue %dx.types.ResRet.f32 %24, 3
  %29 = extractvalue %dx.types.CBufRet.i32 %5, 3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %59, label %31

; <label>:31                                      ; preds = %0
  %32 = call float @dx.op.unary.f32(i32 6, float %25)  ; FAbs(value)
  %33 = call float @dx.op.unary.f32(i32 6, float %26)  ; FAbs(value)
  %34 = call float @dx.op.unary.f32(i32 6, float %27)  ; FAbs(value)
  %35 = call float @dx.op.unary.f32(i32 23, float %32)  ; Log(value)
  %36 = call float @dx.op.unary.f32(i32 23, float %33)  ; Log(value)
  %37 = call float @dx.op.unary.f32(i32 23, float %34)  ; Log(value)
  %38 = fmul fast float %35, 0x3FDAAAAAA0000000
  %39 = fmul fast float %36, 0x3FDAAAAAA0000000
  %40 = fmul fast float %37, 0x3FDAAAAAA0000000
  %41 = call float @dx.op.unary.f32(i32 21, float %38)  ; Exp(value)
  %42 = call float @dx.op.unary.f32(i32 21, float %39)  ; Exp(value)
  %43 = call float @dx.op.unary.f32(i32 21, float %40)  ; Exp(value)
  %44 = fmul fast float %41, 0x3FF0E147A0000000
  %45 = fmul fast float %42, 0x3FF0E147A0000000
  %46 = fmul fast float %43, 0x3FF0E147A0000000
  %47 = fadd fast float %44, 0xBFAC28F5C0000000
  %48 = fadd fast float %45, 0xBFAC28F5C0000000
  %49 = fadd fast float %46, 0xBFAC28F5C0000000
  %50 = fmul fast float %25, 0x4029D70A40000000
  %51 = fmul fast float %26, 0x4029D70A40000000
  %52 = fmul fast float %27, 0x4029D70A40000000
  %53 = fcmp fast olt float %25, 0x3F69A5C380000000
  %54 = fcmp fast olt float %26, 0x3F69A5C380000000
  %55 = fcmp fast olt float %27, 0x3F69A5C380000000
  %56 = select i1 %53, float %50, float %47
  %57 = select i1 %54, float %51, float %48
  %58 = select i1 %55, float %52, float %49
  br label %59

; <label>:59                                      ; preds = %31, %0
  %60 = phi float [ %56, %31 ], [ %25, %0 ]
  %61 = phi float [ %57, %31 ], [ %26, %0 ]
  %62 = phi float [ %58, %31 ], [ %27, %0 ]
  call void @dx.op.textureStore.f32(i32 67, %dx.types.Handle %11, i32 %3, i32 %4, i32 undef, float %60, float %61, float %62, float %28, i8 15)  ; TextureStore(srv,coord0,coord1,coord2,value0,value1,value2,value3,mask)
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @dx.op.threadId.i32(i32, i32) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #1

; Function Attrs: nounwind
declare void @dx.op.textureStore.f32(i32, %dx.types.Handle, i32, i32, i32, float, float, float, float, i8) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind readonly }
attributes #2 = { nounwind }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.entryPoints = !{!7}

!0 = !{!"dxc(private) 1.8.0.4739 (d9a5e97d0)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 9}
!3 = !{!"cs", i32 6, i32 6}
!4 = !{null, null, !5, null}
!5 = !{!6}
!6 = !{i32 0, %pushConstants* undef, !"", i32 0, i32 0, i32 1, i32 24, null}
!7 = !{void ()* @CSMain, !"CSMain", null, !4, !8}
!8 = !{i32 0, i64 3221225472, i32 4, !9}
!9 = !{i32 8, i32 8, i32 1}

#endif

const unsigned char g_CS_GenerateMipmaps[] = {
  0x44, 0x58, 0x42, 0x43, 0xce, 0x61, 0xb7, 0xd4, 0xae, 0xac, 0xd7, 0xa2,
  0xb3, 0x5a, 0x82, 0x64, 0xc4, 0xc6, 0x15, 0x51, 0x01, 0x00, 0x00, 0x00,
  0x50, 0x09, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0xd8, 0x00, 0x00, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0x68, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x53, 0x4d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x7e, 0x12, 0xe1, 0xee, 0x61, 0x2b, 0x6f, 0xb6, 0xca, 0xb1, 0x4b, 0x84,
  0x32, 0xad, 0x57, 0x5f, 0x44, 0x58, 0x49, 0x4c, 0x54, 0x08, 0x00, 0x00,
  0x66, 0x00, 0x05, 0x00, 0x15, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x3c, 0x08, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x0c, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x86, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x01, 0xd5, 0x06, 0x62,
  0xf8, 0xff, 0xff, 0xff, 0xff, 0x01, 0x90, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x9c, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0xe6, 0x08, 0xc0, 0xa0, 0x0c, 0xc3, 0x30, 0x10, 0x31, 0x47, 0x80, 0x90,
  0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0,
  0x10, 0x28, 0x38, 0xe6, 0x08, 0x82, 0x52, 0x20, 0xc3, 0x90, 0x24, 0xa4,
  0xcc, 0x00, 0xdc, 0x34, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0xaf, 0x84,
  0xb4, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x2a, 0x18, 0x86, 0x61, 0x86, 0xc2,
  0x34, 0x03, 0x82, 0x30, 0x0c, 0xc3, 0x0c, 0xc3, 0xc0, 0x90, 0x53, 0x16,
  0x60, 0x40, 0x86, 0x61, 0x60, 0x18, 0x86, 0x31, 0x08, 0x2a, 0x03, 0x33,
  0x30, 0x24, 0x1d, 0x35, 0x5c, 0xfe, 0x84, 0x3d, 0x84, 0xe4, 0x73, 0x1b,
  0x55, 0xac, 0xc4, 0xe4, 0x23, 0xb7, 0x8d, 0x88, 0x61, 0x18, 0x86, 0x42,
  0x50, 0x03, 0x32, 0x50, 0x75, 0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92,
  0xcf, 0x6d, 0x54, 0xb1, 0x12, 0x93, 0x5f, 0xdc, 0x36, 0x22, 0x18, 0x86,
  0x61, 0x0a, 0x71, 0x0d, 0xc8, 0x40, 0xd8, 0x6d, 0xc3, 0xe5, 0x4f, 0xd8,
  0x43, 0x48, 0xfe, 0x4a, 0x48, 0x0e, 0x15, 0x09, 0x44, 0x1a, 0x39, 0x0f,
  0x11, 0x4d, 0x08, 0x21, 0x21, 0x61, 0x18, 0x0a, 0x81, 0x0c, 0x88, 0x46,
  0xdb, 0x41, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48, 0xfe, 0x4a, 0x48, 0x1b,
  0xd2, 0x0c, 0x88, 0x18, 0x86, 0xc1, 0x28, 0x05, 0x32, 0x74, 0x43, 0x42,
  0xde, 0x40, 0xc0, 0x30, 0x82, 0xc0, 0x1c, 0x25, 0x4d, 0x11, 0x25, 0x4c,
  0x7e, 0x4a, 0x49, 0x07, 0xe7, 0x34, 0xd2, 0x04, 0x34, 0x93, 0x84, 0x8a,
  0x61, 0x18, 0x86, 0xf0, 0x9a, 0x87, 0x92, 0x0e, 0xce, 0x69, 0xa4, 0x09,
  0x68, 0x26, 0x09, 0x05, 0x22, 0x8d, 0x73, 0x04, 0xa0, 0x30, 0x05, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x04, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x14, 0x20,
  0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x38,
  0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x23, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0xa7, 0x02, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0x0f, 0x06, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x9e, 0x0d, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1e, 0x10, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x1a, 0x4a, 0xa0, 0x18, 0x4a, 0x62, 0x04, 0xa0, 0x60,
  0x0a, 0xa1, 0x20, 0xa8, 0x2c, 0x40, 0x40, 0x40, 0x40, 0x0c, 0x22, 0x67,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x31, 0x20, 0xc3, 0x1b,
  0x43, 0x81, 0x93, 0x4b, 0xb3, 0x0b, 0xa3, 0x2b, 0x4b, 0x01, 0x89, 0x71,
  0xc1, 0x71, 0x81, 0x71, 0xa1, 0xb9, 0x99, 0xc9, 0x01, 0x41, 0x21, 0xcb,
  0x09, 0xab, 0x29, 0xcb, 0xb9, 0x21, 0x83, 0x49, 0xd9, 0x10, 0x04, 0x13,
  0x84, 0x41, 0x99, 0x20, 0x0c, 0xcb, 0x06, 0x61, 0x20, 0x26, 0x08, 0x03,
  0xb3, 0x41, 0x18, 0x0c, 0x0a, 0x63, 0x73, 0x1b, 0x06, 0x84, 0x20, 0x26,
  0x08, 0x43, 0x33, 0x41, 0x20, 0x03, 0x89, 0xc0, 0x04, 0x61, 0x70, 0x36,
  0x20, 0xca, 0xc2, 0x28, 0xca, 0xd0, 0x00, 0x1b, 0x02, 0x67, 0x03, 0x01,
  0x00, 0x0f, 0x30, 0x41, 0x10, 0x00, 0x1a, 0x43, 0x53, 0x4d, 0x61, 0x69,
  0x6e, 0x13, 0x84, 0x32, 0x88, 0x26, 0x08, 0xc3, 0x33, 0x41, 0x18, 0xa0,
  0x0d, 0x43, 0x55, 0x0d, 0x1b, 0x08, 0x65, 0xa2, 0xac, 0x0d, 0x45, 0x24,
  0x01, 0xd0, 0x55, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc,
  0x8d, 0x6e, 0x4a, 0x10, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b,
  0x4b, 0x7b, 0x73, 0x9b, 0x12, 0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2,
  0xd8, 0xec, 0xca, 0xe4, 0xa6, 0x04, 0x46, 0x1d, 0x32, 0x3c, 0x97, 0x39,
  0xb4, 0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x01,
  0x52, 0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac,
  0x6c, 0x6e, 0x4a, 0xf0, 0xd4, 0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93,
  0xcb, 0x83, 0x7a, 0x4b, 0x73, 0xa3, 0x9b, 0x9b, 0x12, 0x5c, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0x83, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1, 0x1c, 0xc2, 0x61, 0x1d,
  0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00,
  0x2e, 0x00, 0x00, 0x00, 0x06, 0x60, 0x70, 0xac, 0x09, 0x20, 0x8d, 0x21,
  0x50, 0xc3, 0xe5, 0x3b, 0x8f, 0x0f, 0x34, 0x8d, 0x33, 0x01, 0x13, 0x11,
  0x02, 0xcd, 0xb0, 0x10, 0x76, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10,
  0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6,
  0x17, 0xb7, 0x6d, 0x06, 0xdb, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x01, 0x55,
  0x14, 0x44, 0x54, 0x3a, 0xc0, 0x50, 0x12, 0x06, 0x20, 0x60, 0x3e, 0x72,
  0xdb, 0x96, 0xd0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44,
  0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0xcc, 0x86, 0x34, 0x03, 0xd2,
  0x18, 0x26, 0xa0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x11, 0xc0, 0x44,
  0x84, 0x40, 0x33, 0x2c, 0xc4, 0x17, 0x39, 0x4c, 0x48, 0x00, 0x8f, 0x0d,
  0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10, 0x25, 0x51,
  0x11, 0x8b, 0x5f, 0xdc, 0xb6, 0x11, 0x58, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f,
  0x11, 0xd7, 0x44, 0x45, 0x04, 0x3b, 0x39, 0x11, 0xe1, 0x17, 0xb7, 0x6d,
  0x01, 0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x4f, 0x47, 0x44, 0x00, 0x83, 0x38,
  0xf8, 0xc8, 0x6d, 0x5b, 0xc1, 0x33, 0x5c, 0xbe, 0xf3, 0xf8, 0x54, 0x03,
  0x44, 0x98, 0x5f, 0xdc, 0x36, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x90, 0x00, 0x00, 0x00, 0x13, 0x04, 0x43, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x34, 0x14, 0xec, 0x40, 0xd1, 0x0e, 0x94, 0x4b,
  0xa9, 0x94, 0x6e, 0x40, 0xd9, 0x95, 0x24, 0xc4, 0x0c, 0x40, 0xc9, 0x0e,
  0x94, 0x46, 0x11, 0x14, 0x21, 0x50, 0x71, 0x14, 0x5f, 0x19, 0x06, 0x90,
  0x51, 0x04, 0xe5, 0x41, 0xc9, 0x08, 0x40, 0x0d, 0x10, 0x33, 0x46, 0x50,
  0xab, 0xb5, 0xda, 0x7e, 0x63, 0x04, 0x7d, 0x2c, 0xba, 0xf8, 0x37, 0x46,
  0xe0, 0xf6, 0xb1, 0x68, 0xfb, 0xc2, 0x18, 0x81, 0x2c, 0xba, 0x3d, 0x0d,
  0x06, 0x63, 0x04, 0x3c, 0xbc, 0xea, 0x74, 0x37, 0x46, 0x00, 0x82, 0x20,
  0x08, 0x7f, 0x33, 0x00, 0x23, 0x00, 0xa4, 0xcd, 0x21, 0x70, 0xce, 0x1c,
  0x42, 0x97, 0xcd, 0x21, 0x78, 0xd9, 0x1c, 0xc2, 0xd7, 0x50, 0x37, 0x07,
  0xd1, 0x34, 0x8d, 0x18, 0x00, 0x00, 0x00, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xe0, 0xa9, 0x01, 0x16, 0x98, 0xc1, 0x33, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x1b, 0x1b, 0x84, 0x41, 0x60, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x01, 0x41, 0x07, 0x1e, 0x1a, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x01, 0x51, 0x07, 0x1f, 0x1b, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82,
  0x41, 0x15, 0x07, 0xdf, 0xa0, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0xca, 0x1d, 0x94, 0x41, 0x50, 0x55, 0x23, 0x06,
  0x07, 0x00, 0x82, 0x60, 0xb0, 0xc9, 0xc1, 0x19, 0x04, 0xcb, 0x68, 0x02,
  0x11, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xa2, 0x07, 0x68, 0x10,
  0x60, 0xd8, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x6c, 0x75, 0xa0, 0x06,
  0x41, 0x33, 0x9a, 0x70, 0x08, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xa0,
  0xf4, 0xc1, 0x1a, 0x04, 0xda, 0x36, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0x1b, 0x1e, 0xb4, 0x41, 0xf0, 0x1c, 0xc3, 0xd4, 0x31, 0x4c, 0x99, 0x80,
  0xc1, 0xc7, 0x84, 0x0c, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x80,
  0xf9, 0x41, 0x1b, 0x44, 0x7b, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42,
  0x60, 0x42, 0x21, 0x1f, 0x13, 0x0a, 0xf9, 0x8c, 0x18, 0x3c, 0x00, 0x08,
  0x82, 0x81, 0x73, 0x0a, 0x6a, 0x00, 0x29, 0x42, 0xe0, 0x79, 0x7d, 0xd0,
  0x07, 0x70, 0xd0, 0x8d, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26,
  0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x26, 0x60, 0xc3, 0x70, 0x43, 0x30,
  0x0a, 0x60, 0x30, 0xcb, 0x20, 0x04, 0xc1, 0x88, 0x81, 0x01, 0x80, 0x20,
  0x18, 0x48, 0xac, 0x60, 0x0a, 0xc6, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18,
  0x48, 0xad, 0x70, 0x0a, 0xc6, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x48,
  0xae, 0x80, 0x0a, 0xc6, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x48, 0xaf,
  0xf0, 0x07, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x48, 0xb0, 0x00,
  0x0a, 0xc3, 0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x48, 0xb1, 0x10, 0x0a,
  0x83, 0x0d, 0x71, 0x20, 0x1f, 0x1b, 0xe4, 0x40, 0x3e, 0x36, 0xcc, 0x81,
  0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x40, 0xaa, 0x05, 0x52, 0x18,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x40, 0xb2, 0x85, 0x52, 0x18, 0x46,
  0x0c, 0x0c, 0x00, 0x04, 0xc1, 0x40, 0xba, 0x05, 0x53, 0x18, 0x6c, 0xb0,
  0x03, 0xf9, 0xd8, 0x70, 0x07, 0xf2, 0xb1, 0x01, 0x0f, 0xe4, 0x63, 0x03,
  0x1e, 0xc0, 0xc7, 0x86, 0x3c, 0x80, 0x8f, 0x0d, 0x7a, 0x00, 0x1f, 0xc3,
  0xf4, 0x40, 0x3e, 0x86, 0xed, 0x81, 0x7c, 0x0c, 0xe3, 0x03, 0xf9, 0x0c,
  0x47, 0x6c, 0x7c, 0x40, 0x7c, 0xc3, 0x11, 0x5b, 0x1f, 0x10, 0xdf, 0x70,
  0xc4, 0xe6, 0x07, 0xc4, 0x37, 0xdd, 0x60, 0x24, 0xc3, 0x74, 0x83, 0x91,
  0x0c, 0xd3, 0x0d, 0x46, 0x32, 0xcc, 0x12, 0x08, 0x03, 0x15, 0x8c, 0x11,
  0x88, 0x02, 0x30, 0x50, 0xc1, 0x18, 0x81, 0x28, 0x00, 0x03, 0x15, 0x8c,
  0x11, 0x88, 0x02, 0x30, 0x62, 0xe0, 0x00, 0x20, 0x08, 0x06, 0xd0, 0x3a,
  0xb8, 0x82, 0x1c, 0xe8, 0x41, 0x1e, 0xd4, 0xc2, 0x20, 0x04, 0x61, 0xc0,
  0x0a, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#endif
